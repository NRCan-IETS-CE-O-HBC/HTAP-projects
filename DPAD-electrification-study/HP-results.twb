<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20201.20.0219.0753                               -->
<workbook original-version='18.1' source-build='2020.1.0 (20201.20.0219.0753)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <style-rule element='worksheet'>
      <format attr='font-size' value='12' />
    </style-rule>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='HTAP-prm-output' inline='true' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='HTAP-prm-output' name='textscan.1srqypz12ahs941c0g85k0jiewz3'>
            <connection class='textscan' directory='C:/HTAP-projects/DPAD-electrification-study' filename='HTAP-prm-output.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1srqypz12ahs941c0g85k0jiewz3' name='all-results.csv' table='[all-results#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='string' name='myID' ordinal='0' />
            <column datatype='string' name='myBatchname' ordinal='1' />
            <column datatype='real' name='archetype|Area-Wall-m2' ordinal='2' />
            <column datatype='real' name='archetype|Area-Windows-m2' ordinal='3' />
            <column datatype='string' name='archetype|Base-Locale' ordinal='4' />
            <column datatype='real' name='archetype|Floor-Area-m2' ordinal='5' />
            <column datatype='string' name='archetype|House-Storeys' ordinal='6' />
            <column datatype='string' name='archetype|House-Type' ordinal='7' />
            <column datatype='real' name='archetype|House-Volume-m3' ordinal='8' />
            <column datatype='string' name='archetype|climate-zone' ordinal='9' />
            <column datatype='string' name='archetype|fuel-DHW-presub' ordinal='10' />
            <column datatype='string' name='archetype|fuel-heating-presub' ordinal='11' />
            <column datatype='string' name='archetype|h2k-File' ordinal='12' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-Ceilings' ordinal='13' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-AtticCeilings' ordinal='14' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FlatCeilings' ordinal='15' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-CathCeilings' ordinal='16' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-ACH' ordinal='17' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-CasementWindows' ordinal='18' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-DWHRSystem' ordinal='19' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-GenericWall_1Layer_definitions' ordinal='20' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-HVACSystem' ordinal='21' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-HRVonly' ordinal='22' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-DHWSystem' ordinal='23' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FoundationWallExtIns' ordinal='24' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FoundationWallIntIns' ordinal='25' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FoundationSlabBelowGrade' ordinal='26' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FoundationSlabOnGrade' ordinal='27' />
            <column datatype='real' name='cost-estimates|byAttribute|Opt-FloorHeaderIntIns' ordinal='28' />
            <column datatype='integer' name='cost-estimates|byAttribute|Opt-ExposedFloor' ordinal='29' />
            <column datatype='real' name='cost-estimates|byBuildingComponent|envelope' ordinal='30' />
            <column datatype='real' name='cost-estimates|byBuildingComponent|mechanical' ordinal='31' />
            <column datatype='integer' name='cost-estimates|byBuildingComponent|renewable' ordinal='32' />
            <column datatype='string' name='cost-estimates|bySource' ordinal='33' />
            <column datatype='real' name='cost-estimates|total' ordinal='34' />
            <column datatype='string' name='input|House-ListOfUpgrades' ordinal='35' />
            <column datatype='boolean' name='input|House-Upgraded' ordinal='36' />
            <column datatype='string' name='input|Opt-ACH' ordinal='37' />
            <column datatype='string' name='input|Opt-Baseloads' ordinal='38' />
            <column datatype='string' name='input|Opt-CasementWindows' ordinal='39' />
            <column datatype='string' name='input|Opt-Ceilings' ordinal='40' />
            <column datatype='string' name='input|Opt-DHWSystem' ordinal='41' />
            <column datatype='string' name='input|Opt-DWHRSystem' ordinal='42' />
            <column datatype='string' name='input|Opt-FlatCeilings' ordinal='43' />
            <column datatype='string' name='input|Opt-FloorHeaderIntIns' ordinal='44' />
            <column datatype='string' name='input|Opt-FoundationSlabBelowGrade' ordinal='45' />
            <column datatype='string' name='input|Opt-FoundationSlabOnGrade' ordinal='46' />
            <column datatype='string' name='input|Opt-FoundationWallExtIns' ordinal='47' />
            <column datatype='string' name='input|Opt-FoundationWallIntIns' ordinal='48' />
            <column datatype='string' name='input|Opt-GenericWall_1Layer_definitions' ordinal='49' />
            <column datatype='string' name='input|Opt-HRVonly' ordinal='50' />
            <column datatype='string' name='input|Opt-HRVspec' ordinal='51' />
            <column datatype='string' name='input|Opt-Heating-Cooling' ordinal='52' />
            <column datatype='string' name='input|Opt-Location' ordinal='53' />
            <column datatype='string' name='input|Opt-Ruleset' ordinal='54' />
            <column datatype='string' name='input|Opt-WindowDistribution' ordinal='55' />
            <column datatype='string' name='input|Ruleset-Fuel-Source' ordinal='56' />
            <column datatype='string' name='input|Ruleset-Ventilation' ordinal='57' />
            <column datatype='string' name='input|Run-Locale' ordinal='58' />
            <column datatype='string' name='input|Run-Region' ordinal='59' />
            <column datatype='string' name='input|upgrade-package-list' ordinal='60' />
            <column datatype='real' name='output|AuxEnergyReq-HeatingGJ' ordinal='61' />
            <column datatype='real' name='output|AnnDHWLoad-GJ' ordinal='62' />
            <column datatype='real' name='output|AvgAirConditioning-COP' ordinal='63' />
            <column datatype='real' name='output|Energy-CoolingGJ' ordinal='64' />
            <column datatype='real' name='output|Energy-DHWGJ' ordinal='65' />
            <column datatype='real' name='output|Energy-HeatingGJ' ordinal='66' />
            <column datatype='real' name='output|Energy-PlugGJ' ordinal='67' />
            <column datatype='real' name='output|Energy-Total-GJ' ordinal='68' />
            <column datatype='real' name='output|Energy-VentGJ' ordinal='69' />
            <column datatype='real' name='output|EnergyEleckWh' ordinal='70' />
            <column datatype='real' name='output|EnergyGasM3' ordinal='71' />
            <column datatype='real' name='output|EnergyOil_l' ordinal='72' />
            <column datatype='real' name='output|EnergyProp_L' ordinal='73' />
            <column datatype='real' name='output|EnergyWood_cord' ordinal='74' />
            <column datatype='real' name='output|Gross-HeatLoss-GJ' ordinal='75' />
            <column datatype='integer' name='output|HDDs' ordinal='76' />
            <column datatype='real' name='output|PEAK-Cooling-W' ordinal='77' />
            <column datatype='real' name='output|PEAK-Heating-W' ordinal='78' />
            <column datatype='boolean' name='status|success' ordinal='79' />
            <column datatype='real' name='output|SpcHeatHP-GJ' ordinal='80' />
            <column datatype='real' name='output|SpcHeatElec-GJ' ordinal='81' />
            <column datatype='real' name='output|SpcHeatGas-GJ' ordinal='82' />
            <column datatype='real' name='output|SpcHeatOil-GJ' ordinal='83' />
            <column datatype='real' name='output|SpcHeatWood-GJ' ordinal='84' />
            <column datatype='real' name='output|SpcHeatProp-GJ' ordinal='85' />
            <column datatype='real' name='output|HotWaterElec-GJ' ordinal='86' />
            <column datatype='real' name='output|HotWaterGas-GJ' ordinal='87' />
            <column datatype='real' name='output|HotWaterOil-GJ' ordinal='88' />
            <column datatype='real' name='output|HotWaterWood-GJ' ordinal='89' />
            <column datatype='real' name='output|HotWaterProp-GJ' ordinal='90' />
            <column datatype='string' name='F92' ordinal='91' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>myID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[myID]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>myID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>myBatchname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[myBatchname]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>myBatchname</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|Area-Wall-m2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[archetype|Area-Wall-m2]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|Area-Wall-m2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|Area-Windows-m2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[archetype|Area-Windows-m2]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|Area-Windows-m2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|Base-Locale</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|Base-Locale]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|Base-Locale</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|Floor-Area-m2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[archetype|Floor-Area-m2]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|Floor-Area-m2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|House-Storeys</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|House-Storeys]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|House-Storeys</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|House-Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|House-Type]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|House-Type</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|House-Volume-m3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[archetype|House-Volume-m3]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|House-Volume-m3</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|climate-zone</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|climate-zone]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|climate-zone</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|fuel-DHW-presub</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|fuel-DHW-presub]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|fuel-DHW-presub</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|fuel-heating-presub</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|fuel-heating-presub]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|fuel-heating-presub</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>archetype|h2k-File</remote-name>
            <remote-type>129</remote-type>
            <local-name>[archetype|h2k-File]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>archetype|h2k-File</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-Ceilings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-Ceilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-Ceilings</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-AtticCeilings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-AtticCeilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-AtticCeilings</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FlatCeilings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FlatCeilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FlatCeilings</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-CathCeilings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-CathCeilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-CathCeilings</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-ACH</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-ACH]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-ACH</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-CasementWindows</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-CasementWindows]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-CasementWindows</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-DWHRSystem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-DWHRSystem]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-DWHRSystem</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-GenericWall_1Layer_definitions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-GenericWall_1Layer_definitions]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-GenericWall_1Layer_definitions</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-HVACSystem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-HVACSystem]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-HVACSystem</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-HRVonly</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-HRVonly]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-HRVonly</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-DHWSystem</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-DHWSystem]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-DHWSystem</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FoundationWallExtIns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FoundationWallExtIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FoundationWallExtIns</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FoundationWallIntIns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FoundationWallIntIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FoundationWallIntIns</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FoundationSlabBelowGrade</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FoundationSlabBelowGrade]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FoundationSlabBelowGrade</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FoundationSlabOnGrade</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FoundationSlabOnGrade]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FoundationSlabOnGrade</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-FloorHeaderIntIns</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-FloorHeaderIntIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-FloorHeaderIntIns</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byAttribute|Opt-ExposedFloor</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cost-estimates|byAttribute|Opt-ExposedFloor]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byAttribute|Opt-ExposedFloor</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byBuildingComponent|envelope</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byBuildingComponent|envelope]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byBuildingComponent|envelope</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byBuildingComponent|mechanical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|byBuildingComponent|mechanical]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byBuildingComponent|mechanical</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|byBuildingComponent|renewable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cost-estimates|byBuildingComponent|renewable]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|byBuildingComponent|renewable</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|bySource</remote-name>
            <remote-type>129</remote-type>
            <local-name>[cost-estimates|bySource]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|bySource</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost-estimates|total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost-estimates|total]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>cost-estimates|total</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|House-ListOfUpgrades</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|House-ListOfUpgrades]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|House-ListOfUpgrades</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|House-Upgraded</remote-name>
            <remote-type>11</remote-type>
            <local-name>[input|House-Upgraded]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|House-Upgraded</remote-alias>
            <ordinal>36</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-ACH</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-ACH]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-ACH</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-Baseloads</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-Baseloads]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-Baseloads</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-CasementWindows</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-CasementWindows]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-CasementWindows</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-Ceilings</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-Ceilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-Ceilings</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-DHWSystem</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-DHWSystem]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-DHWSystem</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-DWHRSystem</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-DWHRSystem]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-DWHRSystem</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FlatCeilings</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FlatCeilings]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FlatCeilings</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FloorHeaderIntIns</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FloorHeaderIntIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FloorHeaderIntIns</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FoundationSlabBelowGrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FoundationSlabBelowGrade]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FoundationSlabBelowGrade</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FoundationSlabOnGrade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FoundationSlabOnGrade]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FoundationSlabOnGrade</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FoundationWallExtIns</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FoundationWallExtIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FoundationWallExtIns</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-FoundationWallIntIns</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-FoundationWallIntIns]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-FoundationWallIntIns</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-GenericWall_1Layer_definitions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-GenericWall_1Layer_definitions]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-GenericWall_1Layer_definitions</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-HRVonly</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-HRVonly]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-HRVonly</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-HRVspec</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-HRVspec]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-HRVspec</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-Heating-Cooling</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-Heating-Cooling]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-Heating-Cooling</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-Location]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-Location</remote-alias>
            <ordinal>53</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-Ruleset</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-Ruleset]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-Ruleset</remote-alias>
            <ordinal>54</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Opt-WindowDistribution</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Opt-WindowDistribution]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Opt-WindowDistribution</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Ruleset-Fuel-Source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Ruleset-Fuel-Source]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Ruleset-Fuel-Source</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Ruleset-Ventilation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Ruleset-Ventilation]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Ruleset-Ventilation</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Run-Locale</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Run-Locale]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Run-Locale</remote-alias>
            <ordinal>58</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|Run-Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|Run-Region]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|Run-Region</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input|upgrade-package-list</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input|upgrade-package-list]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>input|upgrade-package-list</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|AuxEnergyReq-HeatingGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|AuxEnergyReq-HeatingGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|AuxEnergyReq-HeatingGJ</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|AnnDHWLoad-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|AnnDHWLoad-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|AnnDHWLoad-GJ</remote-alias>
            <ordinal>62</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|AvgAirConditioning-COP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|AvgAirConditioning-COP]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|AvgAirConditioning-COP</remote-alias>
            <ordinal>63</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-CoolingGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-CoolingGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-CoolingGJ</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-DHWGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-DHWGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-DHWGJ</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-HeatingGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-HeatingGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-HeatingGJ</remote-alias>
            <ordinal>66</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-PlugGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-PlugGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-PlugGJ</remote-alias>
            <ordinal>67</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-Total-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-Total-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-Total-GJ</remote-alias>
            <ordinal>68</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Energy-VentGJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Energy-VentGJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Energy-VentGJ</remote-alias>
            <ordinal>69</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|EnergyEleckWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|EnergyEleckWh]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|EnergyEleckWh</remote-alias>
            <ordinal>70</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|EnergyGasM3</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|EnergyGasM3]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|EnergyGasM3</remote-alias>
            <ordinal>71</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|EnergyOil_l</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|EnergyOil_l]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|EnergyOil_l</remote-alias>
            <ordinal>72</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|EnergyProp_L</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|EnergyProp_L]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|EnergyProp_L</remote-alias>
            <ordinal>73</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|EnergyWood_cord</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|EnergyWood_cord]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|EnergyWood_cord</remote-alias>
            <ordinal>74</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|Gross-HeatLoss-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|Gross-HeatLoss-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|Gross-HeatLoss-GJ</remote-alias>
            <ordinal>75</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HDDs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[output|HDDs]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HDDs</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|PEAK-Cooling-W</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|PEAK-Cooling-W]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|PEAK-Cooling-W</remote-alias>
            <ordinal>77</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|PEAK-Heating-W</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|PEAK-Heating-W]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|PEAK-Heating-W</remote-alias>
            <ordinal>78</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>status|success</remote-name>
            <remote-type>11</remote-type>
            <local-name>[status|success]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>status|success</remote-alias>
            <ordinal>79</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatHP-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatHP-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatHP-GJ</remote-alias>
            <ordinal>80</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatElec-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatElec-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatElec-GJ</remote-alias>
            <ordinal>81</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatGas-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatGas-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatGas-GJ</remote-alias>
            <ordinal>82</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatOil-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatOil-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatOil-GJ</remote-alias>
            <ordinal>83</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatWood-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatWood-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatWood-GJ</remote-alias>
            <ordinal>84</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|SpcHeatProp-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|SpcHeatProp-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|SpcHeatProp-GJ</remote-alias>
            <ordinal>85</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HotWaterElec-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|HotWaterElec-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HotWaterElec-GJ</remote-alias>
            <ordinal>86</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HotWaterGas-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|HotWaterGas-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HotWaterGas-GJ</remote-alias>
            <ordinal>87</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HotWaterOil-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|HotWaterOil-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HotWaterOil-GJ</remote-alias>
            <ordinal>88</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HotWaterWood-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|HotWaterWood-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HotWaterWood-GJ</remote-alias>
            <ordinal>89</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>output|HotWaterProp-GJ</remote-name>
            <remote-type>5</remote-type>
            <local-name>[output|HotWaterProp-GJ]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>output|HotWaterProp-GJ</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F92</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F92]</local-name>
            <parent-name>[all-results.csv]</parent-name>
            <remote-alias>F92</remote-alias>
            <ordinal>91</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]&quot;' value='Annual system efficiency (J/J), accounting for standby losses to basement in heating season,  heat exracted by HP evaporator' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]&quot;' value='Weighted average gas consumption (m³)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]&quot;' value='Weighted average oil consumption (L/yr)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;' value='Weighted average electrical consumption (kWh/yr)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]&quot;' value='Annual equipment efficiency (J/J), ignoring interactions with building' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949282825:qk]&quot;' value='HP Energy use (GJ)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;' value='Stock-weighted heating load (GJ)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949999627:qk]&quot;' value='Back-up energy use (GJ)' />
          <alias key='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596951334925:qk]&quot;' value='% of load supplied by HP' />
        </aliases>
      </column>
      <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
      </column>
      <column caption='=DHW EFFECTIVE COP (copy)' datatype='real' name='[=DHW EFFECTIVE COP (copy)_265149458416529408]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
      </column>
      <column caption='=Weighted[=DHW COP effective]' datatype='real' name='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2496401596623622144]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|SpcHeatGas] m³' datatype='real' name='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|SpcHeatGas-GJ]*26.137*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|SpcHeatOil] L ' datatype='real' name='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|SpcHeatOil-GJ]/36.72 *1000*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|Energy-Cooling] kWh' datatype='real' name='[=Weighted[output|SpcHeatOil]] L (copy) (copy)_2496401596946829320]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|Energy-CoolingGJ]*277.78*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|SpcHeatElec] kWh' datatype='real' name='[Calculation_2103181049537724416]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|SpcHeatElec-GJ]*277.78*[Calculation_2103181049542045697]' />
      </column>
      <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
      </column>
      <column caption='Location-title' datatype='string' name='[Calculation_2103181049555730438]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[input|Run-Locale]+&quot; &quot;+[input|Run-Region]' />
      </column>
      <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
      </column>
      <column caption='=system COP' datatype='real' name='[Calculation_2103181049559515144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]/[output|Energy-HeatingGJ]' />
      </column>
      <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
      </column>
      <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
      </column>
      <column caption='=Weighted[=DHW COP nominal]' datatype='real' name='[Calculation_2496401596633509892]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[=DHW EFFECTIVE COP (copy)_2496401596633001987]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='= HP backup energy (GJ)' datatype='real' name='[Calculation_2496401596934361094]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if ( [input|Opt-Heating-Cooling] == &quot;CCASHP&quot; or &#13;&#10;     [input|Opt-Heating-Cooling] == &quot;ASHP&quot;      ) then &#13;&#10;&#13;&#10;   [output|SpcHeatElec-GJ] - [output|SpcHeatHP-GJ]&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;gas-hybrid&quot;  ) then &#13;&#10;&#13;&#10;   [output|SpcHeatGas-GJ]&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;oil-hybrid&quot;  ) then &#13;&#10; &#13;&#10;  [output|SpcHeatOil-GJ]&#13;&#10;&#13;&#10;else &#13;&#10;&#13;&#10;0 &#13;&#10;&#13;&#10;&#13;&#10;end' />
      </column>
      <column caption='=Weighted[=system COP]' datatype='real' name='[Calculation_2496401596944592903]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2103181049559515144]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|SpcHeatHP-GJ]' datatype='real' name='[Calculation_2496401596949282825]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|SpcHeatHP-GJ]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[output|AuxEnergyReq-HeatingGJ]' datatype='real' name='[Calculation_2496401596949655562]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=Weighted[HPBackupGJ]' datatype='real' name='[Calculation_2496401596949999627]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2496401596934361094]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='= HP % met by HP' datatype='real' name='[Calculation_2496401596950876172]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='([output|AuxEnergyReq-HeatingGJ] - [Calculation_2496401596934361094])&#13;&#10;/ &#13;&#10;[output|AuxEnergyReq-HeatingGJ]' />
      </column>
      <column caption='=Weighted[= HP % met by HP]' datatype='real' name='[Calculation_2496401596951334925]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_2496401596950876172]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=HP+CCASHP-effective-COP' datatype='real' name='[Calculation_265149458434011137]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ fixed [input|Opt-Ruleset], [archetype|h2k-File], [input|Opt-Location]:&#13;&#10;&#13;&#10;    max( if ( [Calculation_379146823977373696] = &quot;base-case&quot; ) then [output|Energy-HeatingGJ]+[output|Energy-DHWGJ] else -10 end ) &#13;&#10;&#13;&#10;}&#13;&#10;&#13;&#10;&#13;&#10; /  ([output|Energy-HeatingGJ]+[output|Energy-DHWGJ])' />
      </column>
      <column caption='=Weighted[=HP+CCASHP-effective-COP]' datatype='real' name='[Calculation_265149458436608003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_265149458434011137]*[Calculation_2103181049542045697]' />
      </column>
      <column caption='=HP+CCASHP-Base/upgrade?' datatype='string' name='[Calculation_379146823977373696]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if ([myBatchname] = &quot;.\hp+dhw-results.csv&quot;) then &#13;&#10;&#13;&#10;  if ( [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;NBC-elec-heat&quot; ) then &#13;&#10;&#13;&#10;     &quot;base-case&quot;&#13;&#10;&#13;&#10;  elseif ( [input|Opt-DHWSystem] = &quot;HPHotWater&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;CCASHP&quot; ) then &#13;&#10;&#13;&#10;     &quot;upgrade-case&quot;&#13;&#10;&#13;&#10;  else &#13;&#10;&#13;&#10;     &quot;not relevant&quot;&#13;&#10;&#13;&#10;  end &#13;&#10;&#13;&#10;else &#13;&#10;  &quot;wrong-set&quot;&#13;&#10;end' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='archetype|h2k-File (group) (copy)' datatype='string' name='[archetype|h2k-File (group) (copy)_2103181049573027849]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
          <bin default-name='false' value='&quot;1984-1995&quot;'>
            <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;1996-2005&quot;'>
            <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Post 2005&quot;'>
            <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
            <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Pre-1984&quot;'>
            <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
            <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
          <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
            <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
            <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;1984-1995&quot;'>
            <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;1996-2005&quot;'>
            <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;2006-onwards&quot;'>
            <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
            <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
          <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
          <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
          <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
          <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
          <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
        </aliases>
      </column>
      <column datatype='string' name='[input|Opt-DHWSystem (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-DHWSystem]' new-bin='true'>
          <bin default-name='false' value='&quot;Existing fleet&quot;'>
            <value>&quot;vintageElecEF0.92&quot;</value>
            <value>&quot;vintageGasEF0.55&quot;</value>
            <value>&quot;vintageGasEF0.57&quot;</value>
            <value>&quot;vintageGasEF0.67&quot;</value>
            <value>&quot;vintageOilEF0.52&quot;</value>
            <value>&quot;vintageOilEF0.55&quot;</value>
            <value>&quot;vintageOilEF0.57&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New electric tankless (EF 0.96)&quot;'>
            <value>&quot;elec_tankless_ef0.96&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New gas tankless (EF 0.95)&quot;'>
            <value>&quot;GasInstantaneous&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New HP water heater (EF 2.5)&quot;'>
            <value>&quot;HPHotWater&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
        </aliases>
      </column>
      <column datatype='string' name='[input|Opt-HVACSystem]' role='dimension' type='nominal' />
      <column caption='Cooling-Name' datatype='string' name='[input|Opt-Heating-Cooling (copy)_2496401596966469646]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[input|Opt-Heating-Cooling]' />
        <aliases>
          <alias key='&quot;gas-furnace-ecm+AC&quot;' value='SEER 18 AC system' />
        </aliases>
      </column>
      <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
          <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
            <value>&quot;gas-furnace-ecm+AC&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
            <value>&quot;oil-high-efficiency&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
            <value>&quot;vintageGas74\%&quot;</value>
            <value>&quot;vintageGas78\%&quot;</value>
            <value>&quot;vintageGas80\%&quot;</value>
            <value>&quot;vintageGas87\%&quot;</value>
            <value>&quot;vintageGas90\%&quot;</value>
            <value>&quot;vintageGas92\%&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
            <value>&quot;vintageOil64\%&quot;</value>
            <value>&quot;vintageOil68\%&quot;</value>
            <value>&quot;vintageOil74\%&quot;</value>
            <value>&quot;vintageOil83\%&quot;</value>
            <value>&quot;vintageOil87\%&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='DPAD COL C headers (scenarios)' datatype='string' name='[input|Opt-Heating-Cooling (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
          <bin default-name='false' value='&quot;All-Electric HPs&quot;'>
            <value>&quot;ASHP&quot;</value>
            <value>&quot;CCASHP&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Dual Fuel HPs&quot;'>
            <value>&quot;gas-hybrid&quot;</value>
            <value>&quot;oil-hybrid&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;ENERGY STAR&quot;'>
            <value>&quot;gas-furnace-ecm+AC&quot;</value>
            <value>&quot;oil-high-efficiency&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Reference cases&quot;'>
            <value>&quot;NBC-elec-heat&quot;</value>
            <value>&quot;vintageGas74\%&quot;</value>
            <value>&quot;vintageGas78\%&quot;</value>
            <value>&quot;vintageGas80\%&quot;</value>
            <value>&quot;vintageGas87\%&quot;</value>
            <value>&quot;vintageGas90\%&quot;</value>
            <value>&quot;vintageGas92\%&quot;</value>
            <value>&quot;vintageOil64\%&quot;</value>
            <value>&quot;vintageOil68\%&quot;</value>
            <value>&quot;vintageOil74\%&quot;</value>
            <value>&quot;vintageOil83\%&quot;</value>
            <value>&quot;vintageOil87\%&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[input|Opt-Heating-Cooling (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true' />
      </column>
      <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
      <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' new-bin='true'>
          <bin default-name='false' value='&quot;All-Electric&quot;'>
            <value>&quot;ASHP&quot;</value>
            <value>&quot;ASHP (full electric)&quot;</value>
            <value>&quot;CCASHP&quot;</value>
            <value>&quot;CCASHP (full electric)&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Dual-fuel&quot;'>
            <value>&quot;Gas Hybrid&quot;</value>
            <value>&quot;HYBRID (gas backup)&quot;</value>
            <value>&quot;HYBRID (oil backup)&quot;</value>
            <value>&quot;Oil Hybrid&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;New ENERGY STAR equipment&quot;'>
            <value>&quot;Gas furnace&quot;</value>
            <value>&quot;Oil furnace&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Reference cases&quot;'>
            <value>&quot;Existing electric furance&quot;</value>
            <value>&quot;Existing gas furance&quot;</value>
            <value>&quot;Existing oil furnace&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;ASHP&quot;'>
            <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;ashp-scenario.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;CCASHP&quot;'>
            <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;CCASHP-scenario.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Existing electric furance&quot;'>
            <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;reference-cases.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Existing gas furance&quot;'>
            <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;reference-cases.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Existing oil furnace&quot;'>
            <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;reference-cases.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Gas furnace&quot;'>
            <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Gas Hybrid&quot;'>
            <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;gas-hybrid-scenario.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Oil furnace&quot;'>
            <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
          </bin>
          <bin default-name='false' value='&quot;Oil Hybrid&quot;'>
            <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;oil-hybrid-scenario.csv&quot;)</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
          <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
          <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
        </aliases>
      </column>
      <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
          <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
          <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
          <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
          <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
        </aliases>
      </column>
      <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
      <column datatype='real' name='[output|EnergyEleckWh]' role='measure' type='quantitative' />
      <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='[output|HDDs]' />
      </column>
      <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
      <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
      <column datatype='real' name='[output|SpcHeatHP-GJ]' role='measure' type='quantitative' />
      <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2496401596625772546]' derivation='Avg' name='[avg:Calculation_2496401596625772546:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596934361094]' derivation='Avg' name='[avg:Calculation_2496401596934361094:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|AuxEnergyReq-HeatingGJ]' derivation='Avg' name='[avg:output|AuxEnergyReq-HeatingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|SpcHeatElec-GJ]' derivation='Avg' name='[avg:output|SpcHeatElec-GJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' derivation='Sum' name='[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]' pivot='key' type='quantitative' />
      <column-instance column='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]' pivot='key' type='quantitative' />
      <column-instance column='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2103181049537724416]' derivation='Sum' name='[sum:Calculation_2103181049537724416:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596633509892]' derivation='Sum' name='[sum:Calculation_2496401596633509892:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596934361094]' derivation='Sum' name='[sum:Calculation_2496401596934361094:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596949282825]' derivation='Sum' name='[sum:Calculation_2496401596949282825:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596949655562]' derivation='Sum' name='[sum:Calculation_2496401596949655562:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596949999627]' derivation='Sum' name='[sum:Calculation_2496401596949999627:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_2496401596951334925]' derivation='Sum' name='[sum:Calculation_2496401596951334925:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|AuxEnergyReq-HeatingGJ]' derivation='Sum' name='[sum:output|AuxEnergyReq-HeatingGJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|EnergyEleckWh]' derivation='Sum' name='[sum:output|EnergyEleckWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|SpcHeatElec-GJ]' derivation='Sum' name='[sum:output|SpcHeatElec-GJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|SpcHeatGas-GJ]' derivation='Sum' name='[sum:output|SpcHeatGas-GJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|SpcHeatHP-GJ]' derivation='Sum' name='[sum:output|SpcHeatHP-GJ:qk]' pivot='key' type='quantitative' />
      <column-instance column='[output|SpcHeatOil-GJ]' derivation='Sum' name='[sum:output|SpcHeatOil-GJ:qk]' pivot='key' type='quantitative' />
      <group name='[input|Opt-DHWSystem &amp; input|Opt-Heating-Cooling (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-DHWSystem]' />
          <groupfilter function='level-members' level='[input|Opt-Heating-Cooling]' />
        </groupfilter>
      </group>
      <group name='[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-Ruleset]' />
          <groupfilter function='level-members' level='[input|Opt-DHWSystem]' />
        </groupfilter>
      </group>
      <group name='[input|Opt-HVACSystem &amp; Scenario (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-HVACSystem]' />
          <groupfilter function='level-members' level='[myBatchname]' />
        </groupfilter>
      </group>
      <group name='[input|Opt-HVACSystem &amp; input|Opt-Ruleset (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-HVACSystem]' />
          <groupfilter function='level-members' level='[input|Opt-Ruleset]' />
        </groupfilter>
      </group>
      <group name='[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-Ruleset]' />
          <groupfilter function='level-members' level='[input|Opt-Heating-Cooling]' />
        </groupfilter>
      </group>
      <group name='[input|Opt-Ruleset &amp; Scenario (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[input|Opt-Ruleset]' />
          <groupfilter function='level-members' level='[myBatchname]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.702065' measure-ordering='alphabetic' measure-percentage='0.297935' show-aliased-fields='true' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|SpcHeatElec-GJ:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatElec-GJ:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AuxEnergyReq-HeatingGJ:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|AuxEnergyReq-HeatingGJ:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596625772546:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatHP-GJ:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596934361094:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyEleckWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatOil-GJ:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatGas-GJ:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596934361094:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[input|Opt-DHWSystem (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;vintageElecEF0.92&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;elec_heatpump_ef2.30&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;ElecIDEAL&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;vintageGasEF0.57&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Existing fleet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;vintageGasEF0.55&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;vintageOilEF0.55&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New electric tankless (EF 0.96)&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;HPHotWater&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;New HP water heater (EF 2.5)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;vintageGasEF0.67&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New gas tankless (EF 0.95)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;vintageOilEF0.57&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;vintageOilEF0.52&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Sheet 14' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='Sheet 14' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Cooling Energy Consumption '>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=Weighted[output|Energy-Cooling] kWh' datatype='real' name='[=Weighted[output|SpcHeatOil]] L (copy) (copy)_2496401596946829320]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|Energy-CoolingGJ]*277.78*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column caption='Cooling-Name' datatype='string' name='[input|Opt-Heating-Cooling (copy)_2496401596966469646]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[input|Opt-Heating-Cooling]' />
              <aliases>
                <alias key='&quot;gas-furnace-ecm+AC&quot;' value='SEER 18 AC system' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Heating-Cooling (copy)_2496401596966469646]' derivation='None' name='[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|Energy-CoolingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[output|SpcHeatOil]] L (copy) (copy)_2496401596946829320]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatOil]] L (copy) (copy)_2496401596946829320:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-high-efficiency&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil64\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil68\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil83\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil87\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[input|Opt-Heating-Cooling (group) 1]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[input|Opt-Heating-Cooling (group) 1]' member='&quot;Existing fleet&quot;' />
                <groupfilter function='member' level='[input|Opt-Heating-Cooling (group) 1]' member='&quot;NBC-elec-heat&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Existing fleet&quot;</bucket>
              <bucket>&quot;oil-high-efficiency&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;oil-hybrid&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]'>
            <groupfilter function='member' level='[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]' member='&quot;gas-furnace-ecm+AC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\sh-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatOil]] L (copy) (copy)_2496401596946829320:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{37E1D514-8A40-4AF6-96D1-E3EFE845AF10}' />
    </worksheet>
    <worksheet name='DHW efficiency'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
            </column>
            <column caption='=Weighted[=DHW COP effective]' datatype='real' name='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2496401596623622144]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
            </column>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column caption='=Weighted[=DHW COP nominal]' datatype='real' name='[Calculation_2496401596633509892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[=DHW EFFECTIVE COP (copy)_2496401596633001987]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[output|AnnDHWLoad-GJ]' derivation='Avg' name='[avg:output|AnnDHWLoad-GJ:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-DHWSystem (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-DHWSystem]' new-bin='true'>
                <bin default-name='false' value='&quot;Existing fleet&quot;'>
                  <value>&quot;vintageElecEF0.92&quot;</value>
                  <value>&quot;vintageGasEF0.55&quot;</value>
                  <value>&quot;vintageGasEF0.57&quot;</value>
                  <value>&quot;vintageGasEF0.67&quot;</value>
                  <value>&quot;vintageOilEF0.52&quot;</value>
                  <value>&quot;vintageOilEF0.55&quot;</value>
                  <value>&quot;vintageOilEF0.57&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New electric tankless (EF 0.96)&quot;'>
                  <value>&quot;elec_tankless_ef0.96&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New gas tankless (EF 0.95)&quot;'>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New HP water heater (EF 2.5)&quot;'>
                  <value>&quot;HPHotWater&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AnnDHWLoad-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' derivation='Sum' name='[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596633509892]' derivation='Sum' name='[sum:Calculation_2496401596633509892:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AnnDHWLoad-GJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AnnDHWLoad-GJ:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageElecEF0.92&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.55&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.57&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.67&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.52&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.55&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.57&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Stock weighted average&quot;</bucket>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
              <bucket>&quot;elec_tankless_ef0.96&quot;</bucket>
              <bucket>&quot;HP DHW (EF 2.6)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]' context='true'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\dhw-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' value='128' />
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' value='196' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' value='left' />
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]' value='left' />
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{3D7B41C9-ACD0-46AF-8E69-A4AECE6CEC1E}' />
    </worksheet>
    <worksheet name='DHW efficiency (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
            </column>
            <column caption='=Weighted[=DHW COP effective]' datatype='real' name='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2496401596623622144]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
            </column>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column caption='=Weighted[=DHW COP nominal]' datatype='real' name='[Calculation_2496401596633509892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[=DHW EFFECTIVE COP (copy)_2496401596633001987]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[output|AnnDHWLoad-GJ]' derivation='Avg' name='[avg:output|AnnDHWLoad-GJ:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-DHWSystem (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-DHWSystem]' new-bin='true'>
                <bin default-name='false' value='&quot;Existing fleet&quot;'>
                  <value>&quot;vintageElecEF0.92&quot;</value>
                  <value>&quot;vintageGasEF0.55&quot;</value>
                  <value>&quot;vintageGasEF0.57&quot;</value>
                  <value>&quot;vintageGasEF0.67&quot;</value>
                  <value>&quot;vintageOilEF0.52&quot;</value>
                  <value>&quot;vintageOilEF0.55&quot;</value>
                  <value>&quot;vintageOilEF0.57&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New electric tankless (EF 0.96)&quot;'>
                  <value>&quot;elec_tankless_ef0.96&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New gas tankless (EF 0.95)&quot;'>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New HP water heater (EF 2.5)&quot;'>
                  <value>&quot;HPHotWater&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AnnDHWLoad-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' derivation='Sum' name='[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596633509892]' derivation='Sum' name='[sum:Calculation_2496401596633509892:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AnnDHWLoad-GJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AnnDHWLoad-GJ:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageElecEF0.92&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.55&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.57&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageGasEF0.67&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;elec_tankless_ef0.96&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;GasInstantaneous&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;HPHotWater&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.52&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.55&quot;' />
                  <groupfilter function='member' level='[input|Opt-DHWSystem]' member='&quot;vintageOilEF0.57&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Stock weighted average&quot;</bucket>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
              <bucket>&quot;elec_tankless_ef0.96&quot;</bucket>
              <bucket>&quot;HP DHW (EF 2.6)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]' context='true'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\dhw-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' value='128' />
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' value='196' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' value='left' />
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]' value='left' />
            <format attr='text-align' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]' value='left' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{14CB6F84-9E6C-4A3C-AD5B-A62F88923F49}' />
    </worksheet>
    <worksheet name='HP back-up energy'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='= HP backup energy (GJ)' datatype='real' name='[Calculation_2496401596934361094]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [input|Opt-Heating-Cooling] == &quot;CCASHP&quot; or &#13;&#10;     [input|Opt-Heating-Cooling] == &quot;ASHP&quot;      ) then &#13;&#10;&#13;&#10;   [output|SpcHeatElec-GJ] - [output|SpcHeatHP-GJ]&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;gas-hybrid&quot;  ) then &#13;&#10;&#13;&#10;   [output|SpcHeatGas-GJ]&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;oil-hybrid&quot;  ) then &#13;&#10; &#13;&#10;  [output|SpcHeatOil-GJ]&#13;&#10;&#13;&#10;else &#13;&#10;&#13;&#10;0 &#13;&#10;&#13;&#10;&#13;&#10;end' />
            </column>
            <column caption='=Weighted[output|SpcHeatHP-GJ]' datatype='real' name='[Calculation_2496401596949282825]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatHP-GJ]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[output|AuxEnergyReq-HeatingGJ]' datatype='real' name='[Calculation_2496401596949655562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[HPBackupGJ]' datatype='real' name='[Calculation_2496401596949999627]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2496401596934361094]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='= HP % met by HP' datatype='real' name='[Calculation_2496401596950876172]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='([output|AuxEnergyReq-HeatingGJ] - [Calculation_2496401596934361094])&#13;&#10;/ &#13;&#10;[output|AuxEnergyReq-HeatingGJ]' />
            </column>
            <column caption='=Weighted[= HP % met by HP]' datatype='real' name='[Calculation_2496401596951334925]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2496401596950876172]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Heating-Cooling]' derivation='None' name='[none:input|Opt-Heating-Cooling:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatHP-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2496401596949282825]' derivation='Sum' name='[sum:Calculation_2496401596949282825:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596949655562]' derivation='Sum' name='[sum:Calculation_2496401596949655562:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596949999627]' derivation='Sum' name='[sum:Calculation_2496401596949999627:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596951334925]' derivation='Sum' name='[sum:Calculation_2496401596951334925:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949282825:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949999627:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596951334925:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[:Measure Names]' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949282825:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949999627:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596951334925:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-high-efficiency&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil64\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil68\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil83\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil87\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NBC-elec-heat&quot;</bucket>
              <bucket>&quot;Existing fleet&quot;</bucket>
              <bucket>&quot;gas-furnace-ecm+AC&quot;</bucket>
              <bucket>&quot;gas-hybrid&quot;</bucket>
              <bucket>&quot;oil-high-efficiency&quot;</bucket>
              <bucket>&quot;oil-hybrid&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:input|Opt-Heating-Cooling:nk]' member='&quot;ASHP&quot;' />
              <groupfilter function='member' level='[none:input|Opt-Heating-Cooling:nk]' member='&quot;CCASHP&quot;' />
              <groupfilter function='member' level='[none:input|Opt-Heating-Cooling:nk]' member='&quot;gas-hybrid&quot;' />
              <groupfilter function='member' level='[none:input|Opt-Heating-Cooling:nk]' member='&quot;oil-hybrid&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\sh-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' value='n#,##0.0;-#,##0.0' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596951334925:qk]' value='p0.0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' value='212' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{B2C4D4BB-BD2F-4FFA-97C5-C3841032CB7B}' />
    </worksheet>
    <worksheet name='Heating Energy Consumption'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=Weighted[output|SpcHeatGas] m³' datatype='real' name='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatGas-GJ]*26.137*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[output|SpcHeatOil] L ' datatype='real' name='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatOil-GJ]/36.72 *1000*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[output|SpcHeatElec] kWh' datatype='real' name='[Calculation_2103181049537724416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatElec-GJ]*277.78*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=Weighted[output|AuxEnergyReq-HeatingGJ]' datatype='real' name='[Calculation_2496401596949655562]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='DPAD COL C headers (scenarios)' datatype='string' name='[input|Opt-Heating-Cooling (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;All-Electric HPs&quot;'>
                  <value>&quot;ASHP&quot;</value>
                  <value>&quot;CCASHP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dual Fuel HPs&quot;'>
                  <value>&quot;gas-hybrid&quot;</value>
                  <value>&quot;oil-hybrid&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ENERGY STAR&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Reference cases&quot;'>
                  <value>&quot;NBC-elec-heat&quot;</value>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]' pivot='key' type='quantitative' />
            <column-instance column='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2103181049537724416]' derivation='Sum' name='[sum:Calculation_2103181049537724416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596949655562]' derivation='Sum' name='[sum:Calculation_2496401596949655562:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-high-efficiency&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil64\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil68\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil83\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil87\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NBC-elec-heat&quot;</bucket>
              <bucket>&quot;Existing fleet&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Reference cases&quot;</bucket>
              <bucket>&quot;ENERGY STAR&quot;</bucket>
              <bucket>&quot;All-Electric HPs&quot;</bucket>
              <bucket>&quot;Dual Fuel HPs&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]'>
            <groupfilter function='level-members' level='[none:input|Opt-Ruleset:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\sh-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]' value='n#,##0.0;-#,##0.0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]' value='156' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{52A9C766-4391-4DAF-AD37-461939C60E16}' />
    </worksheet>
    <worksheet name='Runs'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk])</rows>
        <cols>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{7A47522A-0A7F-456A-8A4C-45AD3D1A95D3}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-ACH]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-ACH]' derivation='None' name='[none:input|Opt-ACH:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|EnergyEleckWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|EnergyGasM3]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|EnergyOil_l]' role='measure' type='quantitative' />
            <column-instance column='[output|Energy-DHWGJ]' derivation='Sum' name='[sum:output|Energy-DHWGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|Energy-HeatingGJ]' derivation='Sum' name='[sum:output|Energy-HeatingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|EnergyEleckWh]' derivation='Sum' name='[sum:output|EnergyEleckWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|EnergyGasM3]' derivation='Sum' name='[sum:output|EnergyGasM3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|EnergyOil_l]' derivation='Sum' name='[sum:output|EnergyOil_l:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;roadmapping-pre-1946.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1946-1983.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1984-1995.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1996-2005.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-2006-2011.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-2012-2019.h2k&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:input|Opt-Ruleset:nk]' />
              <groupfilter function='member' level='[none:input|Opt-Ruleset:nk]' member='&quot;as-found&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]' value='40' />
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]' value='72' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-HeatingGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyEleckWh:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyGasM3:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyOil_l:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-DHWGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-ACH:nk]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-HeatingGJ:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-DHWGJ:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyEleckWh:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyGasM3:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|EnergyOil_l:qk]))))</cols>
      </table>
      <simple-id uuid='{EEDE67EB-D2F2-4D1A-AD20-D7F5C61563CA}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-HVACSystem]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Opt-DHWSystem]' derivation='None' name='[none:input|Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-HVACSystem]' derivation='None' name='[none:input|Opt-HVACSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|Energy-CoolingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|PEAK-Cooling-W]' role='measure' type='quantitative' />
            <column-instance column='[output|Energy-CoolingGJ]' derivation='Sum' name='[sum:output|Energy-CoolingGJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|PEAK-Cooling-W]' derivation='Sum' name='[sum:output|PEAK-Cooling-W:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-HVACSystem:nk]' value='320' />
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]' value='140' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|PEAK-Cooling-W:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-CoolingGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-HVACSystem:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk])))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|PEAK-Cooling-W:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|Energy-CoolingGJ:qk])</cols>
      </table>
      <simple-id uuid='{63452222-A70A-43D0-B94B-14DC5B217421}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
            </column>
            <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
            </column>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' derivation='Avg' name='[avg:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596623622144]' derivation='Avg' name='[avg:Calculation_2496401596623622144:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-DHWSystem]' derivation='None' name='[none:input|Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AnnDHWLoad-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2496401596625772546]' derivation='Sum' name='[sum:Calculation_2496401596625772546:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;roadmapping-1996-2005.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1984-1995.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1946-1983.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-pre-1946.h2k&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596623622144:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596625772546:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596623622144:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596625772546:qk]))</cols>
      </table>
      <simple-id uuid='{4B1B42CC-EE61-41AB-8F91-BBB169AAD18A}' />
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2496401596625772546]' derivation='Avg' name='[avg:Calculation_2496401596625772546:qk]' pivot='key' type='quantitative' />
            <column datatype='boolean' name='[input|House-Upgraded]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|House-Upgraded]' derivation='None' name='[none:input|House-Upgraded:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-DHWSystem]' derivation='None' name='[none:input|Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Location]' derivation='None' name='[none:input|Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596625772546:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk])))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2496401596625772546:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk])</cols>
        <pages>
          <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{7A230FA8-976C-4C5A-B2E9-DB9FB3919988}' />
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
            </column>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column caption='=Weighted[=DHW COP nominal]' datatype='real' name='[Calculation_2496401596633509892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[=DHW EFFECTIVE COP (copy)_2496401596633001987]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|House-ListOfUpgrades]' role='dimension' type='nominal' />
            <column datatype='boolean' name='[input|House-Upgraded]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|House-ListOfUpgrades]' derivation='None' name='[none:input|House-ListOfUpgrades:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|House-Upgraded]' derivation='None' name='[none:input|House-Upgraded:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-DHWSystem]' derivation='None' name='[none:input|Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AnnDHWLoad-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column-instance column='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' derivation='Sum' name='[sum:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596623622144]' derivation='Sum' name='[sum:Calculation_2496401596623622144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596625772546]' derivation='Sum' name='[sum:Calculation_2496401596625772546:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596633509892]' derivation='Sum' name='[sum:Calculation_2496401596633509892:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;ElecIDEAL&quot;</bucket>
              <bucket>&quot;elec_heatpump_ef2.30&quot;</bucket>
              <bucket>&quot;elec_tankless_ef0.96&quot;</bucket>
              <bucket>&quot;GasInstantaneous&quot;</bucket>
              <bucket>&quot;HPHotWater&quot;</bucket>
              <bucket>&quot;vintageOilEF0.52&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]'>
            <groupfilter function='member' level='[none:input|Run-Region:nk]' member='&quot;ONTARIO&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-ListOfUpgrades:nk]' value='408' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596625772546:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596623622144:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-ListOfUpgrades:nk]))))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596625772546:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=DHW EFFECTIVE COP (copy)_2496401596633001987:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596623622144:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]))))</cols>
      </table>
      <simple-id uuid='{FCE803D5-8400-4869-A399-B910C291A60C}' />
    </worksheet>
    <worksheet name='Sheet 15 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=DHW COP nominal' datatype='real' name='[=DHW EFFECTIVE COP (copy)_2496401596633001987]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ])' />
            </column>
            <column caption='=Weighted[=DHW COP effective]' datatype='real' name='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2496401596623622144]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='=DHW EFFECTIVE COP' datatype='real' name='[Calculation_2496401596623622144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AnnDHWLoad-GJ]/([output|Energy-DHWGJ]+[Calculation_2496401596625772546])' />
            </column>
            <column caption='=DHW-impact-on-heating-load' datatype='real' name='[Calculation_2496401596625772546]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ] - &#13;&#10;&#13;&#10;{ fixed [archetype|h2k-File], [input|Opt-Location], [input|Opt-Ruleset], [input|Opt-Heating-Cooling] : &#13;&#10;&#13;&#10;   max ( if [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; then [output|AuxEnergyReq-HeatingGJ] else null end ) &#13;&#10;&#13;&#10;}' />
            </column>
            <column caption='=Weighted[=DHW COP nominal]' datatype='real' name='[Calculation_2496401596633509892]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[=DHW EFFECTIVE COP (copy)_2496401596633001987]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-DHWSystem]' new-bin='true'>
                <bin default-name='false' value='&quot;Existing fleet&quot;'>
                  <value>&quot;vintageElecEF0.92&quot;</value>
                  <value>&quot;vintageGasEF0.55&quot;</value>
                  <value>&quot;vintageGasEF0.57&quot;</value>
                  <value>&quot;vintageGasEF0.67&quot;</value>
                  <value>&quot;vintageOilEF0.52&quot;</value>
                  <value>&quot;vintageOilEF0.55&quot;</value>
                  <value>&quot;vintageOilEF0.57&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New electric tankless (EF 0.96)&quot;'>
                  <value>&quot;elec_tankless_ef0.96&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New gas tankless (EF 0.95)&quot;'>
                  <value>&quot;GasInstantaneous&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New HP water heater (EF 2.5)&quot;'>
                  <value>&quot;HPHotWater&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Opt-DHWSystem]' derivation='None' name='[none:input|Opt-DHWSystem:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AnnDHWLoad-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[=DHW COP nominal]] (copy)_2496401596899897349]' derivation='Sum' name='[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2103181049542045697]' derivation='Sum' name='[sum:Calculation_2103181049542045697:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2496401596633509892]' derivation='Sum' name='[sum:Calculation_2496401596633509892:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:input|Opt-DHWSystem:nk]' />
              <groupfilter function='empty-level' member='[none:input|Opt-DHWSystem:nk]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:input|Opt-DHWSystem:nk]' />
              <groupfilter function='member' level='[none:input|Opt-DHWSystem:nk]' member='&quot;ElecIDEAL&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\dhw-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049542045697:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk])</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596633509892:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[=DHW COP nominal]] (copy)_2496401596899897349:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049542045697:qk])))</cols>
      </table>
      <simple-id uuid='{92117841-8F92-49A2-A4FB-31841475FEF8}' />
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column-instance column='[input|Opt-Heating-Cooling]' derivation='None' name='[none:input|Opt-Heating-Cooling:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{FB3433D8-4294-4821-AA8F-69E0F685439E}' />
    </worksheet>
    <worksheet name='Sheet 18'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2A0BC7DD-9699-4C50-B0C8-4EF4C0C0C894}' />
    </worksheet>
    <worksheet name='Sheet 19'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\dhw-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</cols>
      </table>
      <simple-id uuid='{AFA38C06-E6F4-4955-823C-1ED9B10D2863}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='boolean' name='[input|House-Upgraded]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|House-Upgraded]' derivation='None' name='[none:input|House-Upgraded:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
            <column-instance column='[output|SpcHeatElec-GJ]' derivation='Sum' name='[sum:output|SpcHeatElec-GJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|SpcHeatGas-GJ]' derivation='Sum' name='[sum:output|SpcHeatGas-GJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|SpcHeatOil-GJ]' derivation='Sum' name='[sum:output|SpcHeatOil-GJ:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatGas-GJ:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatOil-GJ:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;roadmapping-pre-1946.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1946-1983.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1984-1995.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-1996-2005.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-2006-2011.h2k&quot;</bucket>
              <bucket>&quot;roadmapping-2012-2019.h2k&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:input|Opt-Ruleset:nk]' />
              <groupfilter function='member' level='[none:input|Opt-Ruleset:nk]' member='&quot;as-found&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatElec-GJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatGas-GJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatOil-GJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk])</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk] * ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatElec-GJ:qk] + ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatGas-GJ:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatOil-GJ:qk])))</cols>
      </table>
      <simple-id uuid='{E783C393-1A95-47ED-8CB8-F9F826AE0048}' />
    </worksheet>
    <worksheet name='Sheet 21'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{668DD6E3-9C95-48B2-B011-25CE6FFB26C9}' />
    </worksheet>
    <worksheet name='Sheet 22'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='= HP backup energy (GJ)' datatype='real' name='[Calculation_2496401596934361094]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if ( [input|Opt-Heating-Cooling] == &quot;CCASHP&quot; or &#13;&#10;     [input|Opt-Heating-Cooling] == &quot;ASHP&quot;      ) then &#13;&#10;&#13;&#10;   [output|SpcHeatElec-GJ] - [output|SpcHeatHP-GJ]&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;gas-hybrid&quot;  ) then &#13;&#10;&#13;&#10;   [output|SpcHeatGas-GJ]&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  ( [input|Opt-Heating-Cooling] == &quot;oil-hybrid&quot;  ) then &#13;&#10; &#13;&#10;  [output|SpcHeatOil-GJ]&#13;&#10;&#13;&#10;else &#13;&#10;&#13;&#10;0 &#13;&#10;&#13;&#10;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[output|AuxEnergyReq-HeatingGJ]' derivation='Avg' name='[avg:output|AuxEnergyReq-HeatingGJ:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Heating-Cooling]' derivation='None' name='[none:input|Opt-Heating-Cooling:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatHP-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2496401596934361094]' derivation='Sum' name='[sum:Calculation_2496401596934361094:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|SpcHeatGas-GJ]' derivation='Sum' name='[sum:output|SpcHeatGas-GJ:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|SpcHeatHP-GJ]' derivation='Sum' name='[sum:output|SpcHeatHP-GJ:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596934361094:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatHP-GJ:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596934361094:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatHP-GJ:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:output|SpcHeatGas-GJ:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
              <bucket>&quot;gas-furnace-ecm+AC&quot;</bucket>
              <bucket>&quot;gas-hybrid&quot;</bucket>
              <bucket>&quot;NBC-elec-heat&quot;</bucket>
              <bucket>&quot;oil-high-efficiency&quot;</bucket>
              <bucket>&quot;oil-hybrid&quot;</bucket>
              <bucket>&quot;vintageGas74\%&quot;</bucket>
              <bucket>&quot;vintageGas78\%&quot;</bucket>
              <bucket>&quot;vintageGas80\%&quot;</bucket>
              <bucket>&quot;vintageGas87\%&quot;</bucket>
              <bucket>&quot;vintageGas90\%&quot;</bucket>
              <bucket>&quot;vintageGas92\%&quot;</bucket>
              <bucket>&quot;vintageOil64\%&quot;</bucket>
              <bucket>&quot;vintageOil68\%&quot;</bucket>
              <bucket>&quot;vintageOil74\%&quot;</bucket>
              <bucket>&quot;vintageOil83\%&quot;</bucket>
              <bucket>&quot;vintageOil87\%&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\sh-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AuxEnergyReq-HeatingGJ:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AuxEnergyReq-HeatingGJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk])))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|AuxEnergyReq-HeatingGJ:qk])</cols>
      </table>
      <simple-id uuid='{D26BA1D6-A0DB-4EDB-99BE-316C5D1C0C4D}' />
    </worksheet>
    <worksheet name='Sheet 26'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{660C42FC-EC54-43A0-B667-B34CE7DC7431}' />
    </worksheet>
    <worksheet name='Sheet 28'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=HP+CCASHP-effective-COP' datatype='real' name='[Calculation_265149458434011137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ fixed [input|Opt-Ruleset], [archetype|h2k-File], [input|Opt-Location]:&#13;&#10;&#13;&#10;    max( if ( [Calculation_379146823977373696] = &quot;base-case&quot; ) then [output|Energy-HeatingGJ]+[output|Energy-DHWGJ] else -10 end ) &#13;&#10;&#13;&#10;}&#13;&#10;&#13;&#10;&#13;&#10; /  ([output|Energy-HeatingGJ]+[output|Energy-DHWGJ])' />
            </column>
            <column caption='=HP+CCASHP-Base/upgrade?' datatype='string' name='[Calculation_379146823977373696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([myBatchname] = &quot;.\hp+dhw-results.csv&quot;) then &#13;&#10;&#13;&#10;  if ( [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;NBC-elec-heat&quot; ) then &#13;&#10;&#13;&#10;     &quot;base-case&quot;&#13;&#10;&#13;&#10;  elseif ( [input|Opt-DHWSystem] = &quot;HPHotWater&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;CCASHP&quot; ) then &#13;&#10;&#13;&#10;     &quot;upgrade-case&quot;&#13;&#10;&#13;&#10;  else &#13;&#10;&#13;&#10;     &quot;not relevant&quot;&#13;&#10;&#13;&#10;  end &#13;&#10;&#13;&#10;else &#13;&#10;  &quot;wrong-set&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_379146823977373696]' derivation='None' name='[none:Calculation_379146823977373696:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Location]' derivation='None' name='[none:input|Opt-Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_265149458434011137]' derivation='Sum' name='[sum:Calculation_265149458434011137:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_379146823977373696:nk]' member='&quot;base-case&quot;' />
              <groupfilter function='member' level='[none:Calculation_379146823977373696:nk]' member='&quot;upgrade-case&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;base-case&quot;</bucket>
              <bucket>&quot;upgrade-case&quot;</bucket>
              <bucket>&quot;not relevant&quot;</bucket>
              <bucket>&quot;wrong-set&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='140' />
            <format attr='cell-h' value='60' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]' value='148' />
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_265149458434011137:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]))</rows>
        <cols>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk]</cols>
      </table>
      <simple-id uuid='{06292101-8E09-4DC9-8827-560CD9111886}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[archetype|h2k-File]' derivation='None' name='[none:archetype|h2k-File:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;reference-cases.csv&quot;</bucket>
              <bucket>&quot;CCASHP-scenario.csv&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk])</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk] * [federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk])</cols>
      </table>
      <simple-id uuid='{D7DA1001-BAB5-4FEF-B85A-5A864E7C3E63}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049542045697]' derivation='Avg' name='[avg:Calculation_2103181049542045697:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;1946-1983 &amp; pre-1946&quot;</bucket>
              <bucket>&quot;1984-1995&quot;</bucket>
              <bucket>&quot;1996-2005 &amp; 2006-2011&quot;</bucket>
              <bucket>&quot;2012-2019&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2103181049542045697:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group)])</rows>
        <cols />
      </table>
      <simple-id uuid='{0DB84279-6AC7-4329-8AB3-4A87422085DE}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=Weighted[output|SpcHeatGas] m³' datatype='real' name='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatGas-GJ]*26.137*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[output|SpcHeatOil] L ' datatype='real' name='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatOil-GJ]/36.72 *1000*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=Weighted[output|SpcHeatElec] kWh' datatype='real' name='[Calculation_2103181049537724416]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|SpcHeatElec-GJ]*277.78*[Calculation_2103181049542045697]' />
            </column>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=system COP' datatype='real' name='[Calculation_2103181049559515144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]/[output|Energy-HeatingGJ]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;All-Electric&quot;'>
                  <value>&quot;ASHP&quot;</value>
                  <value>&quot;ASHP (full electric)&quot;</value>
                  <value>&quot;CCASHP&quot;</value>
                  <value>&quot;CCASHP (full electric)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dual-fuel&quot;'>
                  <value>&quot;Gas Hybrid&quot;</value>
                  <value>&quot;HYBRID (gas backup)&quot;</value>
                  <value>&quot;HYBRID (oil backup)&quot;</value>
                  <value>&quot;Oil Hybrid&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New ENERGY STAR equipment&quot;'>
                  <value>&quot;Gas furnace&quot;</value>
                  <value>&quot;Oil furnace&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Reference cases&quot;'>
                  <value>&quot;Existing electric furance&quot;</value>
                  <value>&quot;Existing gas furance&quot;</value>
                  <value>&quot;Existing oil furnace&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;ASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;ashp-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;CCASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;CCASHP-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing electric furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing gas furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;gas-hybrid-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;oil-hybrid-scenario.csv&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatGas-GJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatOil-GJ]' role='measure' type='quantitative' />
            <column-instance column='[=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]' pivot='key' type='quantitative' />
            <column-instance column='[=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836]' derivation='Sum' name='[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2103181049537724416]' derivation='Sum' name='[sum:Calculation_2103181049537724416:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2103181049559515144]' derivation='Sum' name='[sum:Calculation_2103181049559515144:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049537724416:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatElec]] kWh (copy)_2103181049549119491:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:=Weighted[output|SpcHeatGas]] m³ (copy)_2103181049549688836:qk]&quot;</bucket>
              <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049559515144:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Reference cases&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;Gas Hybrid&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]'>
            <groupfilter from='&quot;ASHP&quot;' function='range' level='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' to='&quot;Oil Hybrid&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Existing electric furance&quot;</bucket>
              <bucket>&quot;ASHP (full electric)&quot;</bucket>
              <bucket>&quot;CCASHP (full electric)&quot;</bucket>
              <bucket>&quot;Existing gas furance&quot;</bucket>
              <bucket>&quot;Existing oil furnace&quot;</bucket>
              <bucket>&quot;HYBRID (gas backup)&quot;</bucket>
              <bucket>&quot;HYBRID (oil backup)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' value='152' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{BBC5AF7A-25D5-4E6F-815C-E2CE4A3D6D43}' />
    </worksheet>
    <worksheet name='Sheet 5 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=system COP' datatype='real' name='[Calculation_2103181049559515144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]/[output|Energy-HeatingGJ]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_2103181049559515144]' derivation='Avg' name='[avg:Calculation_2103181049559515144:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' new-bin='true'>
                <bin default-name='false' value='&quot;All-Electric&quot;'>
                  <value>&quot;ASHP&quot;</value>
                  <value>&quot;ASHP (full electric)&quot;</value>
                  <value>&quot;CCASHP&quot;</value>
                  <value>&quot;CCASHP (full electric)&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dual-fuel&quot;'>
                  <value>&quot;Gas Hybrid&quot;</value>
                  <value>&quot;HYBRID (gas backup)&quot;</value>
                  <value>&quot;HYBRID (oil backup)&quot;</value>
                  <value>&quot;Oil Hybrid&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;New ENERGY STAR equipment&quot;'>
                  <value>&quot;Gas furnace&quot;</value>
                  <value>&quot;Oil furnace&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Reference cases&quot;'>
                  <value>&quot;Existing electric furance&quot;</value>
                  <value>&quot;Existing gas furance&quot;</value>
                  <value>&quot;Existing oil furnace&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;ASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;ashp-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;CCASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;CCASHP-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing electric furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing gas furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;gas-hybrid-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;oil-hybrid-scenario.csv&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Reference cases&quot;</bucket>
              <bucket>&quot;All-Electric&quot;</bucket>
              <bucket>&quot;Dual-fuel&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]'>
            <groupfilter from='&quot;ASHP&quot;' function='range' level='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' to='&quot;Oil Hybrid&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' direction='ASC'>
            <dictionary>
              <bucket>&quot;CCASHP&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='80' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2103181049559515144:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' value='152' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Text' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2103181049559515144:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)])</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{2454E4A1-B5D1-40D5-AEA4-7B47DA167EB6}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group)]</rows>
        <cols>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{4EA50A34-2EE2-43D7-AE77-712E6CC4589C}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='=system COP' datatype='real' name='[Calculation_2103181049559515144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]/[output|Energy-HeatingGJ]' />
            </column>
            <column-instance column='[Calculation_2103181049559515144]' derivation='Avg' name='[avg:Calculation_2103181049559515144:qk]' pivot='key' type='quantitative' />
            <column-instance column='[output|SpcHeatElec-GJ]' derivation='Avg' name='[avg:output|SpcHeatElec-GJ:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;ASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;ashp-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;CCASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;CCASHP-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing electric furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing gas furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;gas-hybrid-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;oil-hybrid-scenario.csv&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|SpcHeatElec-GJ]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|SpcHeatElec-GJ:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2103181049559515144:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <lod column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:output|SpcHeatElec-GJ:qk] + [federated.0bhc4v80c9fchi14nu32z1uk30ur].[avg:Calculation_2103181049559515144:qk])</cols>
      </table>
      <simple-id uuid='{41E8F104-C358-44DE-A3D4-9B96DC469ABC}' />
    </worksheet>
    <worksheet name='Weights'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='archetype|h2k-File (group) (copy)' datatype='string' name='[archetype|h2k-File (group) (copy)_2103181049573027849]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Post 2005&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Pre-1984&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Ruleset &amp; Scenario (Combined)]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;ASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;ashp-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;CCASHP&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;CCASHP-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing electric furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_elec&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing gas furance&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Existing oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;reference-cases.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Gas Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_gas&quot;,&quot;gas-hybrid-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil furnace&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;furnace-replacement-scenario.csv&quot;)</value>
                </bin>
                <bin default-name='false' value='&quot;Oil Hybrid&quot;'>
                  <value>(&quot;ArchetypeRoadmapping_oil&quot;,&quot;oil-hybrid-scenario.csv&quot;)</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[input|Run-Region]' derivation='None' name='[none:input|Run-Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2103181049542045697]' derivation='Sum' name='[sum:Calculation_2103181049542045697:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group) (copy)_2103181049573027849]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Pre-1984&quot;</bucket>
              <bucket>&quot;1984-1995&quot;</bucket>
              <bucket>&quot;1996-2005&quot;</bucket>
              <bucket>&quot;Post 2005&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]'>
            <groupfilter function='member' level='[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' member='&quot;Existing electric furance&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='40' />
            <format attr='cell-h' value='40' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2103181049542045697:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</rows>
        <cols total='true'>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group) (copy)_2103181049573027849]</cols>
      </table>
      <simple-id uuid='{2050A140-E85A-497B-98B7-3F081C8FAE31}' />
    </worksheet>
    <worksheet name='seasonal Heating COP'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=system COP' datatype='real' name='[Calculation_2103181049559515144]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[output|AuxEnergyReq-HeatingGJ]/[output|Energy-HeatingGJ]' />
            </column>
            <column caption='=Weighted[=system COP]' datatype='real' name='[Calculation_2496401596944592903]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_2103181049559515144]*[Calculation_2103181049542045697]' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='DPAD COL C headers (scenarios)' datatype='string' name='[input|Opt-Heating-Cooling (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;All-Electric HPs&quot;'>
                  <value>&quot;ASHP&quot;</value>
                  <value>&quot;CCASHP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dual Fuel HPs&quot;'>
                  <value>&quot;gas-hybrid&quot;</value>
                  <value>&quot;oil-hybrid&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ENERGY STAR&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Reference cases&quot;'>
                  <value>&quot;NBC-elec-heat&quot;</value>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|AuxEnergyReq-HeatingGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_2496401596944592903]' derivation='Sum' name='[sum:Calculation_2496401596944592903:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-high-efficiency&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil64\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil68\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil83\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil87\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NBC-elec-heat&quot;</bucket>
              <bucket>&quot;Existing fleet&quot;</bucket>
              <bucket>&quot;gas-furnace-ecm+AC&quot;</bucket>
              <bucket>&quot;gas-hybrid&quot;</bucket>
              <bucket>&quot;oil-high-efficiency&quot;</bucket>
              <bucket>&quot;oil-hybrid&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Reference cases&quot;</bucket>
              <bucket>&quot;ENERGY STAR&quot;</bucket>
              <bucket>&quot;All-Electric HPs&quot;</bucket>
              <bucket>&quot;Dual Fuel HPs&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\sh-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='100' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='text-format' field='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596944592903:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596944592903:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{E4BBBB82-C01D-45C9-BA2C-26AD3CCD69EA}' />
    </worksheet>
    <worksheet name='seasonal Heating COP (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='HTAP-prm-output' name='federated.0bhc4v80c9fchi14nu32z1uk30ur' />
          </datasources>
          <datasource-dependencies datasource='federated.0bhc4v80c9fchi14nu32z1uk30ur'>
            <column caption='Weight-factor-within-province' datatype='real' name='[Calculation_2103181049542045697]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [input|Run-Region] == &apos;BRITISH COLUMBIA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.181262729124236&#13;&#10;when &apos;1996-2005&apos; then 0.182790224032587&#13;&#10;when &apos;1984-1995&apos; then 0.243380855397149&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.392566191446029&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF  [input|Run-Region] = &apos;ALBERTA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.201982651796778 &#13;&#10;when &apos;1996-2005&apos; then 0.197026022304833&#13;&#10;when &apos;1984-1995&apos; then 0.141883519206939&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.45910780669145 &#13;&#10;END &#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;SASKATCHEWAN&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.19017094017094 &#13;&#10;when &apos;1996-2005&apos; then 0.147435897435897&#13;&#10;when &apos;1984-1995&apos; then 0.173076923076923&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.489316239316239 &#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;MANITOBA&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.153100775193798&#13;&#10;when &apos;1996-2005&apos; then 0.151162790697674&#13;&#10;when &apos;1984-1995&apos; then 0.213178294573643&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.482558139534884&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;ONTARIO&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.125971143174251&#13;&#10;when &apos;1996-2005&apos; then 0.149648538660747&#13;&#10;when &apos;1984-1995&apos; then 0.219200887902331&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.505179430262671&#13;&#10;END &#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;QUEBEC&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.138363103172487&#13;&#10;when &apos;1996-2005&apos; then 0.138896294321514&#13;&#10;when &apos;1984-1995&apos; then 0.212743268461744&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.509997334044255&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;ELSEIF [input|Run-Region] = &apos;NEW BRUNSWICK&apos; THEN&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.165217391304348&#13;&#10;when &apos;1996-2005&apos; then 0.202898550724638&#13;&#10;when &apos;1984-1995&apos; then 0.226086956521739&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.405797101449275&#13;&#10;END&#13;&#10;&#13;&#10;ELSE&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.145496535796767&#13;&#10;when &apos;1996-2005&apos; then 0.175519630484988&#13;&#10;when &apos;1984-1995&apos; then 0.233256351039261&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.445727482678984&#13;&#10;END&#13;&#10;END&#13;&#10;&#13;&#10;* &#13;&#10;&#13;&#10;CASE [archetype|h2k-File (group)]&#13;&#10;when &apos;2006-onwards&apos; then 0.5 &#13;&#10;when &apos;1996-2005&apos; then 1&#13;&#10;when &apos;1984-1995&apos; then 1&#13;&#10;when &apos;1946-1983 &amp; pre-1946&apos; then 0.5 &#13;&#10;END' />
            </column>
            <column caption='HDD string' datatype='string' name='[Calculation_2103181049555824647]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='str([output|HDDs (copy)_2103181049551978501]) + &quot; HDDs&quot;' />
            </column>
            <column caption='=HP+CCASHP-effective-COP' datatype='real' name='[Calculation_265149458434011137]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ fixed [input|Opt-Ruleset], [archetype|h2k-File], [input|Opt-Location]:&#13;&#10;&#13;&#10;    max( if ( [Calculation_379146823977373696] = &quot;base-case&quot; ) then [output|Energy-HeatingGJ]+[output|Energy-DHWGJ] else -10 end ) &#13;&#10;&#13;&#10;}&#13;&#10;&#13;&#10;&#13;&#10; /  ([output|Energy-HeatingGJ]+[output|Energy-DHWGJ])' />
            </column>
            <column caption='=Weighted[=HP+CCASHP-effective-COP]' datatype='real' name='[Calculation_265149458436608003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_265149458434011137]*[Calculation_2103181049542045697]' />
            </column>
            <column caption='=HP+CCASHP-Base/upgrade?' datatype='string' name='[Calculation_379146823977373696]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if ([myBatchname] = &quot;.\hp+dhw-results.csv&quot;) then &#13;&#10;&#13;&#10;  if ( [input|Opt-DHWSystem] = &quot;ElecIDEAL&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;NBC-elec-heat&quot; ) then &#13;&#10;&#13;&#10;     &quot;base-case&quot;&#13;&#10;&#13;&#10;  elseif ( [input|Opt-DHWSystem] = &quot;HPHotWater&quot; and  &#13;&#10;       [input|Opt-Heating-Cooling] = &quot;CCASHP&quot; ) then &#13;&#10;&#13;&#10;     &quot;upgrade-case&quot;&#13;&#10;&#13;&#10;  else &#13;&#10;&#13;&#10;     &quot;not relevant&quot;&#13;&#10;&#13;&#10;  end &#13;&#10;&#13;&#10;else &#13;&#10;  &quot;wrong-set&quot;&#13;&#10;end' />
            </column>
            <column datatype='string' name='[archetype|climate-zone]' role='dimension' type='nominal' />
            <column datatype='string' name='[archetype|h2k-File (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[archetype|h2k-File]' new-bin='true'>
                <bin default-name='false' value='&quot;1946-1983 &amp; pre-1946&quot;'>
                  <value>&quot;roadmapping-1946-1983.h2k&quot;</value>
                  <value>&quot;roadmapping-pre-1946.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1984-1995&quot;'>
                  <value>&quot;roadmapping-1984-1995.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;1996-2005&quot;'>
                  <value>&quot;roadmapping-1996-2005.h2k&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;2006-onwards&quot;'>
                  <value>&quot;roadmapping-2006-2011.h2k&quot;</value>
                  <value>&quot;roadmapping-2012-2019.h2k&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[archetype|h2k-File]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;roadmapping-1946-1983.h2k&quot;' value='1946-1983' />
                <alias key='&quot;roadmapping-1984-1995.h2k&quot;' value='1984-1995' />
                <alias key='&quot;roadmapping-1996-2005.h2k&quot;' value='1996-2005' />
                <alias key='&quot;roadmapping-2006-2011.h2k&quot;' value='2006-2011' />
                <alias key='&quot;roadmapping-2012-2019.h2k&quot;' value='2012-2019' />
                <alias key='&quot;roadmapping-pre-1946.h2k&quot;' value='pre-1946' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-DHWSystem]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;HPHotWater&quot;' value='HP DHW (EF 2.6)' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;ECM gas furnace + AC&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ECM Oil Furnace + AC&quot;'>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Gas Furnaces&quot;'>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Existing Oil Furnaces&quot;'>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='DPAD COL C headers (scenarios)' datatype='string' name='[input|Opt-Heating-Cooling (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[input|Opt-Heating-Cooling]' new-bin='true'>
                <bin default-name='false' value='&quot;All-Electric HPs&quot;'>
                  <value>&quot;ASHP&quot;</value>
                  <value>&quot;CCASHP&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Dual Fuel HPs&quot;'>
                  <value>&quot;gas-hybrid&quot;</value>
                  <value>&quot;oil-hybrid&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;ENERGY STAR&quot;'>
                  <value>&quot;gas-furnace-ecm+AC&quot;</value>
                  <value>&quot;oil-high-efficiency&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Reference cases&quot;'>
                  <value>&quot;NBC-elec-heat&quot;</value>
                  <value>&quot;vintageGas74\%&quot;</value>
                  <value>&quot;vintageGas78\%&quot;</value>
                  <value>&quot;vintageGas80\%&quot;</value>
                  <value>&quot;vintageGas87\%&quot;</value>
                  <value>&quot;vintageGas90\%&quot;</value>
                  <value>&quot;vintageGas92\%&quot;</value>
                  <value>&quot;vintageOil64\%&quot;</value>
                  <value>&quot;vintageOil68\%&quot;</value>
                  <value>&quot;vintageOil74\%&quot;</value>
                  <value>&quot;vintageOil83\%&quot;</value>
                  <value>&quot;vintageOil87\%&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[input|Opt-Heating-Cooling]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Location]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Opt-Ruleset]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ArchetypeRoadmapping_elec&quot;' value='Electrically-heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_gas&quot;' value='Gas heated homes' />
                <alias key='&quot;ArchetypeRoadmapping_oil&quot;' value='Oil heated homes' />
              </aliases>
            </column>
            <column datatype='string' name='[input|Run-Locale]' role='dimension' type='nominal' />
            <column datatype='string' name='[input|Run-Region]' role='dimension' type='nominal' />
            <column caption='Scenario' datatype='string' name='[myBatchname]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;ashp-scenario.csv&quot;' value='ASHP' />
                <alias key='&quot;CCASHP-scenario.csv&quot;' value='CCASHP' />
                <alias key='&quot;gas-hybrid-scenario.csv&quot;' value='GAS-HYBRID' />
                <alias key='&quot;oil-hybrid-scenario.csv&quot;' value='OIL-HYBRID' />
                <alias key='&quot;reference-cases.csv&quot;' value='REFERENCE' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2103181049555824647]' derivation='None' name='[none:Calculation_2103181049555824647:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_379146823977373696]' derivation='None' name='[none:Calculation_379146823977373696:nk]' pivot='key' type='nominal' />
            <column-instance column='[archetype|climate-zone]' derivation='None' name='[none:archetype|climate-zone:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Opt-Ruleset]' derivation='None' name='[none:input|Opt-Ruleset:nk]' pivot='key' type='nominal' />
            <column-instance column='[input|Run-Locale]' derivation='None' name='[none:input|Run-Locale:nk]' pivot='key' type='nominal' />
            <column-instance column='[myBatchname]' derivation='None' name='[none:myBatchname:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[output|Energy-DHWGJ]' role='measure' type='quantitative' />
            <column datatype='real' name='[output|Energy-HeatingGJ]' role='measure' type='quantitative' />
            <column caption='output|HDDs (copy)' datatype='integer' name='[output|HDDs (copy)_2103181049551978501]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='[output|HDDs]' />
            </column>
            <column datatype='integer' name='[output|HDDs]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_265149458436608003]' derivation='Sum' name='[sum:Calculation_265149458436608003:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_elec&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;NBC-elec-heat&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_gas&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-furnace-ecm+AC&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;gas-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas78\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas80\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas87\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas90\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageGas92\%&quot;' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[input|Opt-Ruleset]' member='&quot;ArchetypeRoadmapping_oil&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;ASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;CCASHP&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-high-efficiency&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;oil-hybrid&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil64\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil68\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil74\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil83\%&quot;' />
                  <groupfilter function='member' level='[input|Opt-Heating-Cooling]' member='&quot;vintageOil87\%&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]' direction='ASC'>
            <dictionary>
              <bucket>&quot;NBC-elec-heat&quot;</bucket>
              <bucket>&quot;Existing fleet&quot;</bucket>
              <bucket>&quot;gas-furnace-ecm+AC&quot;</bucket>
              <bucket>&quot;gas-hybrid&quot;</bucket>
              <bucket>&quot;oil-high-efficiency&quot;</bucket>
              <bucket>&quot;oil-hybrid&quot;</bucket>
              <bucket>&quot;ASHP&quot;</bucket>
              <bucket>&quot;CCASHP&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Reference cases&quot;</bucket>
              <bucket>&quot;ENERGY STAR&quot;</bucket>
              <bucket>&quot;All-Electric HPs&quot;</bucket>
              <bucket>&quot;Dual Fuel HPs&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]'>
            <groupfilter function='member' level='[none:Calculation_379146823977373696:nk]' member='&quot;upgrade-case&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;HALIFAX&quot;</bucket>
              <bucket>&quot;MONTREAL&quot;</bucket>
              <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
              <bucket>&quot;FREDERICTON&quot;</bucket>
              <bucket>&quot;SAINTJOHNS&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]'>
            <groupfilter function='member' level='[none:myBatchname:nk]' member='&quot;.\\hp+dhw-results.csv&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</column>
            <column>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='160' />
            <format attr='cell-h' value='80' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_265149458436608003:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]))</rows>
        <cols>([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk] / ([federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk] / [federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:nk]))</cols>
      </table>
      <simple-id uuid='{1481EB29-9270-46D8-9E61-BAFB5BDB82FC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E101FF1B-E410-45F7-BA12-6BE195B39D94}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-HVACSystem &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4D1E74C-C94B-421D-9967-65A620DA8AA8}' />
    </window>
    <window class='worksheet' name='DHW efficiency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D3A1EDD-C998-4EF3-A46B-DCC25C8F6DAF}' />
    </window>
    <window class='worksheet' name='DHW efficiency (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2772C957-98F7-495D-BABB-488B1600F52A}' />
    </window>
    <window class='worksheet' name='Sheet 28'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem &amp; input|Opt-Heating-Cooling (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECAE1761-E1F8-4E9D-9E57-B1C8D24466A2}' />
    </window>
    <window class='worksheet' name='Heating Energy Consumption'>
      <cards>
        <edge name='left'>
          <strip size='365'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card mode='dropdown' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{868E5C55-C23F-4051-AECD-DF6A8083A803}' />
    </window>
    <window class='worksheet' name='seasonal Heating COP'>
      <cards>
        <edge name='left'>
          <strip size='292'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D2750A9C-DAF1-4150-A85F-66850EAF58AD}' />
    </window>
    <window class='worksheet' maximized='true' name='seasonal Heating COP (2)'>
      <cards>
        <edge name='left'>
          <strip size='292'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 2]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_379146823977373696:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7CA76F3-5864-4A3A-986B-F59B4782B7AB}' />
    </window>
    <window class='worksheet' name='Cooling Energy Consumption '>
      <cards>
        <edge name='left'>
          <strip size='293'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling (copy)_2496401596966469646:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D404DCA-6512-45B7-8ED7-CEEFD26E2579}' />
    </window>
    <window class='worksheet' name='HP back-up energy'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;[federated.0bhc4v80c9fchi14nu32z1uk30ur].[sum:Calculation_2496401596949655562:qk]&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling (group) 1]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1A2451B-4FEA-4E6F-A932-59A694D2DB9C}' />
    </window>
    <window class='worksheet' name='Weights'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group) (copy)_2103181049573027849]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7588B98-8E97-4C94-BA92-51AE99AF1461}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='141'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:configuration|RunDirectory:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:configuration|SaveDirectory:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-ACH:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Ruleset-Fuel-Source:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4F0CA09-CB11-40BF-92F6-E5896C72D1CD}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-AboveGradeWall:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E87F7E6B-DBEF-49D0-8434-D1E6264149FF}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D9FDF994-226F-4F02-9572-47644E6DF056}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A8FAB4C-DB7F-476C-AFB0-5CE607647649}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D69DEE8C-FECA-44A2-8CD3-ECD6FDEA8C1C}' />
    </window>
    <window class='worksheet' name='Sheet 5 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555730438:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:Calculation_2103181049555824647:ok]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|climate-zone:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Baseloads:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Locale:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:output|HDDs (copy)_2103181049551978501:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C1FD1178-C5DD-4522-8108-658799DD5599}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[archetype|h2k-File (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAAA3318-4727-4389-8555-99534EB86C0B}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Ruleset &amp; Scenario (Combined) (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0D48A26-158B-4940-8AD0-16D900B352A6}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{0772381E-981B-4068-9ED5-FE6B55523F4B}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:F89:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-HVACSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myID:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DCC862CB-63D7-4ABF-AED3-53A0D50AD294}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;ArchetypeRoadmapping_gas&quot;</bucket>
                  <bucket>&quot;MANITOBA&quot;</bucket>
                  <bucket>&quot;roadmapping-pre-1946.h2k&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{568AEC88-2496-409B-9DC8-E83F9943D69C}' />
    </window>
    <window class='worksheet' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk]</field>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;CHARLOTTETOWN&quot;</bucket>
                  <bucket>&quot;HPHotWater&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference>
                <fields>
                  <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;ArchetypeRoadmapping_elec&quot;</bucket>
                </multibucket>
              </page-reference>
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Location:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0577CC8C-2DCB-44C9-AB6A-6CCB559938DA}' />
    </window>
    <window class='worksheet' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-ListOfUpgrades:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D532FF3C-3231-4462-BA74-00F8ED0719EB}' />
    </window>
    <window class='worksheet' name='Sheet 15 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-DHWSystem:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-DHWSystem (group)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-ListOfUpgrades:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|House-Upgraded:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC6C1AD4-CAC1-49C3-8CE8-F7CAC01CFAFB}' />
    </window>
    <window class='worksheet' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{35DC51E0-9A14-4F97-ADF5-F0EB2676A7D9}' />
    </window>
    <window class='worksheet' name='Sheet 18'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{16CA746E-8A14-497F-B5D5-4F6D32FCB3E0}' />
    </window>
    <window class='worksheet' name='Sheet 19'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{722FA97C-8CDC-4E59-B82B-EE8BD33D6AB8}' />
    </window>
    <window class='worksheet' name='Sheet 21'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99236467-AFF6-4A22-9EE2-8CD42E4548C0}' />
    </window>
    <window class='worksheet' name='Sheet 22'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[:Measure Names]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[input|Opt-Heating-Cooling &amp; input|Opt-Ruleset (Combined)]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:archetype|h2k-File:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Heating-Cooling:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Opt-Ruleset:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:input|Run-Region:nk]</field>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07193AE0-AE9A-4036-A475-BE5C8A29C926}' />
    </window>
    <window class='worksheet' name='Sheet 26'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bhc4v80c9fchi14nu32z1uk30ur].[none:myBatchname:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E143D9D0-ACDE-41D8-95F4-EC9ED0F660CE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='104' name='Cooling Energy Consumption ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='DHW efficiency' width='192'>
      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
      crnXvh4MBkkmk9y9e5e5uTmSyST/5//8HxYWFt74fl4nKekYi8XIZDIiIy4l4ubn58lms8K7
      lEqlDtURW6/XyWQylEollpaW9iz7tra2iMVilEolcrkcVqv1tZ8RHGNRDpTRaBTVRuFwGJ/P
      J7LcKpUKrVZLqVTi4sWLZLNZ5ufniUQiWK1Went7BWbk8ePHdHR0CKNae3s7oVAIs9nM0tIS
      Wq0Wr9dLpVKhq6uLzc1N/viP/5hGo8Hi4iKLi4u43W4SiQQWi0XYADo6OgiFQoyNjbG9vQ28
      SDbJ5XIuXrzI1tYWN27cYG1tDUBk56X38L6Sai3C4TB2u51f/OIX3L9/H6vVSrFY5Pnz51Qq
      Fdra2hgdHUWj0bwXwvAgSQa/SqWC2WxGo9GIwfbtt99Sr9fxer1otVr0ev0bl7THM8ABkslk
      eDwefD4f4XAYnU6H0+kU/vJkMil8/zqdjtOnT4uGDoFAgOHhYVQqFTabje3tbRE6lUKExWKR
      zs5OHA4HyWRSYAQvXLiA0WgE4NSpU3ti7m1tbSQSCarVKnq9np6eHvL5vGDy6HQ6Ll26tMcW
      YTabOXPmDGazGYfDwejo6AdFZaQo0OrqKj6fT4RspdzHX/3VX3Hu3DnOnTvHkydPyGQyh5pd
      n52dZW1tjVwuR7VaZXNzUwQQ/vW//teMj48zPDxMIpFgbm7ujQVJx5vgXdq9CQ4EAnR1dYlo
      y9LSkkgEFgoFisUivb296HQ6fD4fHo+H7e1tjEYjGo1GWLwrlYoo39RqtWSzWbLZrAhDmkwm
      kW9wu92iRZBUxidBav1+P52dnUQiEWq1mgjRDgwMsLGxQVtbG0ajUaBKlpeXcTgcRCIRms0m
      XV1dZLNZkXfJ5XLI5XIKhcIbDWOHoR/qJlgMgFKp9IPt5fpd6Q/pWSAV2Hxf/puXVSgUjqzT
      45skZexfmwnW6XSHkqo+1v8/kspZrVYrDoeDVqsl9iO9vb2srq6iVqvp7+9HJpMdOhw3FApR
      qVTo7+8HXkSIYrEYY2NjhEIhkskkp0+fRqlUvhsWpVar8R//4398Z6/47du3qVar7/FW3k3P
      nz/n2bNnRCKRA8NsOzs7ezZfUiLqZSUSCaLR6CvHmZ2d5dmzZ3tKHJPJ5J7MqVSm+PK5XtbG
      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
      NGmSzCpcXQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='DHW efficiency (2)' width='192'>
      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
      RI//BwG9yEWQAj+6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HP back-up energy' width='192'>
      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
      RVJJ/2rsEAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Heating Energy Consumption' width='192'>
      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
      6rGLNZ98AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Runs' width='192'>
      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
      YWFB2DA6nU6cTicNDQ3rTnuGG+Pi4qKYHm1qaiIQCLBnzx7S09Mfy8yTlpbGysoKHR0dBAIB
      hoaGmJubo7GxEaPRKDxnw5Lw7du3097ezsLCwnOzrY88ATYJ09PTXL9+nddffx2z2YxWqyUj
      I4Ouri7Ky8tpaGjgypUrqFQq0Ss/mpchLNT7tvpTqVQSFRW1prctLCxkdnaWTz/9FFjde5CX
      l4dSqeTatWt4PB5UKhWvv/662HH2ySefoFKpsNls4jw6nU7sgYiJiaGyspLPP/8cg8HAr371
      K1ZWVvjkk0+QJIm0tDS2bNmC0+nkypUr7Nq1i9TUVN59911OnjzJ9evXSUhI4I033mBxcZH/
      /u//RpZlsrKy2Lp1K7D6bmQymbDZbBvKE/ckIlqgTYzb7eazzz7jvffe2xSZa36OrBsAbrdb
      7N6P8NMyOTlJQkLCc+vxIqwl8gSI8EITeQmO8EITCYAILzSRANhEyLLM3NwcExMTf9EKy78k
      NhwA4aX1U6dO8e///u/8x3/8B1evXv1BstyFhQXu3Lnzk2ZwD+foepZM988Tl8tFXV3dE0Vl
      w8PDNDQ0AHDz5s0f5I35Y9DX10d9ff1PXrfrseEAWFhY4L//+7+JiYnhd7/7He+88w7Ly8sb
      sir5Nl6vl4mJiecipb116xZfffXVhn/ndruZnJz8SXvesDlu2Ejgu1haWhIy6LGxsR9U9z8G
      DodD1O3Y2Bj/+Z//+YMX854XG1oIk2WZxsZG8vPzhRem0WgUZkeyLNPW1iZc4NLS0oRgqbu7
      m/7+fpFneOvWrWsWZwKBAI2NjTidTgwGAy+//DIGgwGPx8PNmzeFJcmePXvQaDQMDw/T3t5O
      MBgkNjaWiooKZmdnaWlpwePx8NVXX5GcnExVVRUzMzPCKS47O5uioiJUKhXLy8vcunULv9/P
      8vLyd/pp/phoNBry8/NpaWkhJSUFhUIhkpM3NDTg9/uZm5sjMTERWBXEDQ4O0t7eDqwm905K
      SqK1tZUtW7YQGxtLT08P4+PjHDp0CKVSyb1790hJScFms4nzut1uent7SUtL4+7du+Tm5pKX
      l0dfX5/wVS0pKSE9PZ3l5WWam5txOBzodDp2796NVqultbWVnTt3otFomJ+fZ3BwkB07dohz
      +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
      CofDQUtLC9HR0SQmJnLz5k2Gh4fJz8/nj3/8Iz6fj7S0NB4+fMg333xDZmYmra2t9PX10dnZ
      yfz8vEgUaDQa+b//+z8sFguJiYlMTU2xuLhIfn4+IyMj9PX1kZmZiVqt5uOPPyY1NZXJyUmu
      X79OSUkJNTU1nD17FrVaTXJyMufPn8doND62iv7FF1/Q3NwspMr9/f3U1dUJb8/Tp0+jUqmY
      m5vjypUrlJSUsLy8zOzsLNHR0Xz66afCT2h2dpaPP/6YsrIy3G433d3d7NmzB0mSaGpqYtu2
      bURHRyNJEmfPnsXlcpGeno7dbhfJDsOEQiE++ugjkQD8mV6Cc3NzOXDggMg3u7S0xMTEBEaj
      kWPHjqFUKjl9+jQNDQ3s27cPvV7P4cOHSU1N5csvv0Sj0XD06FGGh4e5f/8+Ho+H7u5udu/e
      zbZt25iZmeHUqVMUFBTQ2dnJ0aNHycnJweFwPNeM7JsVlUpFXl4evb29pKSkAKupUYuKitBq
      taSmpophqMFgIDs7G61WS25urqjPuLg4AoGAyHyZmJhIVFQUdrud2NhYSktLRZb58BNVqVRS
      UVEhzhnOkpmVlcWNGzdwuVxMTEywd+9eJicnRUZPk8nE1atX6e7uJjo6mmPHjgGrNov79u1D
      qVQyPj7OwMAA//M//wOsOsglJCRQWVnJ+Pg4n376KXv27CE3N/epRX/fRqlUYrPZaGxsZG5u
      jt27dz+WXdPhcODz+SgvL3+2RNlhy2qLxcLy8jIGgwFJkpicnCQtLU3IEioqKrhz5w779u1D
      p9NhtVpFilSLxSISIqtUKlZWVujr66Orq4srV64Aq0vioVCIPXv28PXXX2M2myktLRUGrz93
      MjMzuX379mPa+CcRlp2HE1kDDA0NYbFYhPCtt7f3MdHb92E2mzGbzdy/f18IIj/77DOmpqaI
      iooiLi6OgwcPcvDgQWD1KaZWq0lLS0OtViNJEpIksWfPHl555RVx3HAZ/vmf/5mBgQFu3bpF
      U1PTGuv1jaBQKNi3bx/l5eW0t7fz5ZdfUlxczIEDB8R3VCrVmmt/btOgRqMRr9eLLMsoFArm
      5+efurdWqVRYLBYOHTq0RusOqwKn/Px8xsbGuHfvHl6vVyRK/jkTGxuLXq9nfn7+iY1VkiT8
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      IDxNAhCe9v8BVYXoniaphV0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      sw6GrnF82kUZNnvGYn6wMgvIk8H1IbjIGL2D4BAnHi0PBA8DwjglL8TlEDw6QiqJaZgLg+Ay
      n74bVHDrT29dzoOsAHE44eB4xN56izDLiSYl09GYQuSMBmN8Q3LUOeHxow30pMQzBIUyyKOA
      QRCz014EBHtounXtdcG6aeGeQbClK0xvMS/SbVSvuGR5Qa1yOQTXvBpJnuItEIIN00M37DNH
      6NWa4IVoBcHzL2MFwSuttER6kF2gNJ7OIHg6xKmtYaoUZfgMu8fs7D1FFTFRppDZFJwqRTjC
      qTYY9fvsPnmGY803GSalIJ52sezKzCLlmvsEJ2eZYCsbziB4SaxRsrxgPE1o1v0P9lSGWdxh
      OiUrMtrVtblDsFKKNB4ipcCvbtx5qvWDrACaphNHU4a9AUV/QsURyFQn1ExaSYxhQBJFTEc9
      oqKLrSm8XKHyhGmc4TTmO+8+jUdE09OzNau/vNY1H0BwFiGT8ZJBcEZRljzean9wTCnF8aiD
      VBLLtOYOwULkBKMDACzbx77jyNiD7AJF0zGHxz3a7SYV1yJJcnJ0TJUzGI6JpgFHnWPqrTa1
      ahWlaeRpTC4ERbkAd2ingmG6uJUbbOBsWrimhmloWDqYN7h20apXPCzToFa5CLmaplHz6jiW
      uxCHaMOwcNw6ll3BvMWWSD/WCoI/ohUEz7+MZYPgB9UFOgwi/tW3R3Mrb8fR+c9+uRz97pUW
      owdVAUohGaX55QeVIuyd4q2tMT48oPn4GfGwh1fxmE4iWjs7Fy6pa/N5PEU+5fXX/xONzb9k
      88l/eD0IloK3x6eMpc/L/f8Vb+9vMJ/8u3OJ5656ezLmX//qNf/pP3zJ480P7VqUUvw/+/83
      B6O3/Od//i/nPiGuLGJef/0/U21/wfbz/2QFwZcpOH5LmkkMlYOmkxca7UfbqCwjTwPi0ZA8
      L8jTDM9S6NU1FIszSux8+3/w/d/+j5h2jf/4v/q/rnWNmJ7wbzqSUksx33zLs7//36n+1//n
      giK8mf6Xf/Ub/u0fOwwmMf/tf/lPPziWi5z/4d/8d6RlwmZti3/+8j+a671PX/9rvvvVf49h
      +Wzs/bMb7bpzmR5kBcjjCCEN3EaTZHCEwEOWBdHwFMf1cFwHDA2RTDHq2yTjMerx44VVgLVH
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29WZMbWZbn9/MVgGNx7LFvjGQmM7O6eqpL6pH0IL3oVSZ9wnnTiz7BmI2N
      SWaSzfSMuquqqyoXJtcIRGAHHIDv+zwEMyszGckkGQiGB+g/MxqMQODEcQSO3/O/595zhTRN
      U3JyPlLEu3YgJ+cuyQMg56MmD4Ccj5o8AHI+avIAyPmoke/yl6dpSj4JlXOX/CQA0jQljmNE
      SUL40XMCECcJkiQhCAJxHCMIAkkcgyCQpimiKJIkCYIgkAKSKJCmAqJ49bog/O0RBAQBVl7A
      //XHxx/6mq9lr6bxPx9v37Ubv4jjOGia9k7vieMYSZJu/LvXZWe4MFhF4Y3tJEmKKAq//oNv
      YecnAWDOx/QNi6Ki0lR9HG2P8yeP2evWscwFcanD50dbPP72W5BUouWMyv4ho7MztltNbFGm
      rgiMVj4VJSVMJCpVjcV4RHNrB2MyRG/otPceUlEhAVapiDufopQkjMmCcLWk2Nii1lBxIw1N
      U/Atkzj0IPZIRA1RraBVCvjWimJVfxWAAiAivOcH05EUKpUKvRffMHdUfvPo+FWwQpokCJKE
      KLy77fnoArHSxhico3d28VYzKnqd4XjOJw+OMRcTIlHDNoYU9SaryZiyXmdpGBw//IyifJWl
      pmlKpVJ5p98dRRGyfPNBfl12euMh//67b25sZ5385KrCIKTd6bIcD+gbM0I1IfBdll4F0wrY
      1iEMQwpahTSJaW/tUt3bQwojKlKK7UW02l1EzcVdWShpApFHpdlkaXl0t7e5PH9Be+/hT5wI
      7QXG5ZRE1RGQiJwF45lBKOgshIg0Dml0OyzNGME9R2s1+eZfnlPvNpBEkeXCodGqUT96RKGk
      3ugD6W5vo6zg679+TbFcQRUinj9/xuGj33F6sPXO9pp6hYET4AcxvbNnJFHMYmWSiCr9/iXd
      nQ6zsYnv+yz7l8RBSKFaJ/E8wgSKN7qanF/jJwHQ3N5jNBiwe3hMQTzCjUB7dIrj+pROjzBX
      JpOFRbteQVArlGQBCdje2UZIIszxDLmo0S4UCUsqfiJTKUggyYRhhCJL6LpO4Wc3k2Jzm/LW
      Lq4TUKrqxJ6NpBzimi7OakW5qiEUKlRFG0EvoxYVuicP0CpF4kRAroTU2q0bf/kBJKVEtQKV
      01Ncy8D0ZR6cfkK1Vn4ve+PJlJmvUivJlNUapjGnXNWxTYvW1g7mbMhkbtOqamiSwnJpEnoO
      UkEmiRPyeYrbRbjLpRCG6/Pv/vDkrn79TzhtVvk/Pj+6azd+EdM0qVar7/SerKVAz6cTeuby
      xnZuTQPk5NwmJVmmW363IL6OOImRxDWI+yTOA+C2mY96COU2xqBHtd5kPpuwc3jKbNDj6PQU
      cz4mFErYxpBSrcFyNqPdanAxXvDZZw9RpZvf6bLCt/NZ5kRwnmDeMk29iheEhFHMZe8ljucw
      vOgxNywG/T4lXSf0fMIwZNS/JIhTzl++JEkj4iSvkdw2eQDcMuPJjPl8Qako0+puUywUUYtF
      igWRZmcbczZlOp9TKpVobu2iydDZP6IopHkAfADyFOiW6R6c0v3JM/uvHvcAKHX3aP34B7Y6
      V4/b7z7lmnWO9Tr/26Mvb2wnSRJE8eb37iRJ8gDI+XAURJF6qXRjO0mcIEprCIA4D4Bb58ci
      uFyrszDmbG1vMZ4u+OTBMcZ0iGFHFIQAuVzHmY+oN1r0p8uNE8GPjXkugj82/iaCE/qDC9LE
      4y9/+Y4gCLi8vETVKpSKKoJcIDIHFPQDZqM+aRrmGuADkAfALfM3ESyxu3eIKKg8+vwUkYT2
      9g6zUR8/CIl8B1HrYM/PKLe2KQjkAfAByFOgW+bnInir0wag0756PD797Kdv+F787u58AO8+
      LEfVGv/757+5sZ0kTRCFNWiANNcAOR8QVZIoq4Ub20mSGHENleAkrwTfPuPBBXYoIAQWpVqT
      +WTM1s4O0/nyRyI4vBLBWh3PWrG3u81gsuDoYPeu3V8rTxZGLoI/NirVKsUCyMUW88EFO0c7
      PPn2KUHgvxLBZUrFAoJcJPJdyuUSoqqhKpsz+5Nl8gC4ZQb9PkEkEjgT6t0d+md9Th4+QAI6
      2zvMx0P8ICQOHES1wHQ0YjjsMxoOsb3ort3fePLl0K/Il0Pfvp2z+Yyhbd3YTl4JzrmXSAio
      a9hbnAjCegJAEPIAuG3G/QusCATfQtPbWLbDbkfnRW/Iw08fspqNmFs/FsFLup0mvf6E008f
      oq5h40dWeLLIK8EfHeVqhVJRQCm1CXwXraiiFktUK2WmwwFKqUxZKyIqReLApVLRiOOE1J0z
      MXMNcNvkAXDLjIZDglAkcKfIaoHJeMj5+Tmm7dLa3sGYjPD8gDhwkdQC09EY2wuh2GCrmg/Q
      t00ugl+Ri+Dbt3M+nzFy7BvbyUVwzr1EgB96Ld3MjrA2O3kA3AVJxPMXPba2Gpz3Rpx8csLL
      F2e0qiUCocDedueuPbwVnmawEpwHwC3z7LtvCAWJ0PbxvQUUGuzudKlqRZIkJfUW/PHP3yKQ
      EHs2aqVBCmzO3E+2yQPglomjiFKtxk5nB3MxRizp7LZ1/vrV13SkXcRinS/2dpjN5lRKCqaX
      3LXLHxV3KoIXrs//+YdsNMc9qlf4X0/Xv/hsXY1lbdumXH637nRZa47bm8+Yeu6N7SRp+l59
      Wq+zc6cBkKYpYXjzbsEfA5ZlvXNz3LsIgCfTCcYvfMkbssLD7Zvvc1jndd1pCiQIAqqqEoYh
      AmC7DsQxaRRiJjJVBco1ndViSbVWwfVCRhcvqbR2SEMHrVyhWiljOT5nz77hcLfLk7FPp6pi
      uQG/+fxTvv7LH6k0OviWSbW9y06n/kafzp59h1isUS0piKmPK+oUpBSJiIJWRZXf7YOfD89J
      tRbG4AK9s409H1FrtpjMVzx81R3aT4vYxoBirc5qOqOs65gLg6NPv0BTrqb7FEVBVd+t9+ld
      TIP+y7DPV+Phta/949YuXx7efKp5rdd1YytrYDEdYwYJIgGhl0BgIXf2efb4WyJRQy+VeN57
      QZIoVF99B1xjwDdPXJrNDg9ODq8ayaYJcSKQCBLV8lVf5VqthrE0qdeqtJu1X/UlSWJEEp4+
      /gqpWKZY8fE9m9VswuEnX3K83/1VGz+mWa8xcBNSoPfiO2zbo2q5yIrKxcUl23sdnLFJmqZM
      RkOSMKFUFyHcvD3B65i7XzeZCIBWu43shqgSiKICic90adPdO6CgyPzzH77iH/+n/w7L8ikI
      ISmwc/IISRvTbLcxbQe9Xoeizr/5sgn+irkV4rouoiTz4LhLr9fHcX30ypvbcmzvH1MsFiDy
      KVd1RFHAcjW69Qqa/m4pCMB4OmfhK5RVEf34ExLfRlIKzKZztnavukPPFy71coGy3mIxn5GG
      IWKhsHEzQSnZC+g71QA5b899qQS/MGasPO/a1yqixOnWzU/hWed1ZW9MyrnXnDRaFGUFJwxf
      +xdn8F6biRRok5kPz0m0FsagR6VaY7E02N5/wOj8JZ9++TnmfISfvBLB1RpLY0WrXqE/d/j8
      0f1sjPVPvZd8PR699vy/3dnj0zXMAq2TfAS4ZZr1GmGcICAwHFzi+z69F08ZzwwuepeU9Dpx
      GIIgMBlPQYD+YIREQBBtVlEszaCozwPglhlP5yyNBaoqsntwRKlYYmfvkE8eHLKzt4s5m2Is
      F6iqytbeAQURdg6PUEQJaYM2wwBr6ee5bnIRfE+4LyIY4MyYs/L9156viCIn3Zt3vd64OkDO
      ZuGEIctrqsGScvNDDNdNHgC3zHx4RqK1Mfo9SpUKlrmi2WpjLC0enp5gTIdMVz4FwUfWdGxj
      gq7rjBbevRXB//Xi7FoR/D/s7vPF3v4177g7speUbRjNuk4YpwiCwHQ2RUgDHn/3gsD36F1c
      IBVK1Gpl5EKZ1J1Sbh5jLhdI+Pi5CL518gC4ZcZTg6VhoKoi+wfHCFKJ3/7dZyiyzM7eHpYx
      w3N9iH2U2i7+sketvYMiKigbJoKzKDdzEXxPuE8iuLcwMINrRLAkc9hqf3B/3mjnxlZycn7G
      yveZXbf5fQ2doddNHgC3zLh/wcqPwbcpVnQWxoxWZ4uVaf9IBHuoXDXG8u0VBwd7XI5mPDg6
      uGv334t/vjy/VgT/49ZuLoI/NkpljVpVpVjpYs7G7J/sc/78nMD3OL+4QCoU0WtVlGIZ4oBa
      rYKkapQKm3dvkjJYCMueRxvGfDrF9SEO5nT2jxj2Rnz25UMURWF3bw9rMcd1PYgD1JLGfDJl
      NOwzHU82rjt0nGRvVisXwfeE+ySCL5cLrCB47fkicNR5tw1F6/DnjXZubCUn52fMXZep83ob
      9K2SdgfevJk8AG6Zcb/Hyo9JfRtNb2E7LgdbTZ6d9Xn42adY8zHTpYeCj1K+EsGddovL/pgH
      n31GUb5/Weof+r3rRfD2Ll/s7N2BR79MHgC3TFHTQA0JlApJ5FLVSihqAV2vYYxHFLQSuq4Q
      BQppHFKrVa8OgPMXzOyYPf3+BcAvksFke4M+3WxizOe4PiSBQbGkMZ9NuOwPsG2X5tY2ztLA
      dT2EJETVysynM0zHQ6x02Klt1v1pHa1M1k0ugu8J90kE91dL7F8QwQftm/c9zUVwTqaZ2DaT
      a84C6xaKZK20lwfAXZBEPH36kq2tBr2LMcenJzx5+pyurpEo5XvfHfpPg4trRfD/uHfAbw8O
      78CjXyYPgFvmyTd/xUckckN810DS2uzudNGrZURZgWDFP/3znyBJkJIAuRiTbnc2ricQQBzF
      d+3Ca+QBcMukaUqj2aK2X8FaTkmVMrttnW++fUxTkpHKLf6Xvz/FXC1JQo9V3h36g5KL4FdE
      UYTr3rxz8W3hOA6a9m6FpLvqDj00VzjXND0uiSI79cYH9+dNdvIR4BWyLFOtVkmTqz6eWexj
      eR9mgf7Uv2Rsm9e+tlUovfM13NSfX7VzYysbxsXLbxibCg/2m4iqRkEWMJcG5UYHraC8s735
      4CVR6VV36PYW5qSP3u4wX9p8enqCuRjjROqrxlg6y5lBRa9hLwwOHv0dVTV7gfgm/vym7tDb
      u/z9GrpDr5M8AH5Gd2cXpQwzY4ksWYS+zXhqsH8ic7T37gu5mo06A1dEkSV6z77BWNo0nQC1
      oHLWu2Bvv4szNlEUhdl0QhqnIMmIaZrJPbQ3QRKzVwjLA+BnKIUqzQY0GxV8Z4UX12k0GqiV
      X2+tfh3j2QIzkCnJIg9/83sKQkScpvT7I/b391jNhixNj2pJZv/ghMV0iAwIhdK97AjxJuI4
      e7NAuQi+J9yXSvDYsnDC16vAAGqSsttqfVB/ftXOja3k5PyIbqXCHy4vGF0jhPe0CrvcPADW
      SR4At8z3Inje76FpGitrxfb+KZcvnvKb3/091nyEE6pYRp9SucJi5dCqFhiaIV8++vRepkF/
      GfV/cU/wb/eztRjifk0x3EOajTpxKlJQZKazCVEUcfb0WyazOefnF5T0OiQxhYLKbGFSkAVG
      syVq4uEEG1YUy2As5yPALTOeLTDDKxF8cvop0/GQ7f0TCF3Kuo4x7rO0fGpFhYPDbZbjAUcn
      J0xGE7R7NgX6a2RxFigXwfeE+yKCAaa2hXtNJVhOEnaauQjO2XBeGgYja/Xa87ul8loCYJ3k
      AXDLzAcvCIst5v0LiloR13Go6g1s1+fTV42xRoaDio+iVbEXBrWKxsSJ760I/mo8+MXu0L/j
      +MM79AY2K8nMIM1GgwSJYkFmZVpIhJydXeI7Nme9C5BV2u0mBa2KGC6ptg9xXRclcXGC7BWO
      bkISZ0/U5wFwy4xnC6ylgSxLHB+fIBWq/MPvvkQrlzk42CewTWzLRhFTSs0jEndCa2cftVCm
      rGZPNN4EQcjeaJaL4HvCfRLBc8fGi17vaienKV29/sH9eaOdG1vJyfkZT2czhteI4L1SeS0B
      sE7yALhlxv0ehhOA71DQKqzMJXq9jesHfxPBcxtV8JG1BoGz4ujokPP+mIcPju/a/ffim8nw
      +nOCt/f4PSd34NEvk2uAW0YtFGm3ami1Ls7KYO9oj9HlAM+2eNnrgaTQ6bSuRHAaUa/rSKpG
      RcteL/2bImTwxJs8AG4Zy1xhOTFi6rB78imLyZIv//4LKtUKhwcHBK6NZdkoIpR1neXcYDTs
      M5/NN647dBZngXIRfE+4TyLYcB38a0SwGCd067kIztlwHk8nDFavi+DDanUtAbBO8gC4Zcb9
      HnPbB99F05vYrsvxbocnz3t8+vnn2MaY4dxCJXjVHdqk02owGE44fvQFZeX+ZamPJ6NrRXCy
      tcvvD48/vENv4P59uvcMpVCg26lTrnUhTahXK4iSTKvdZjkZkUoKW90OxXIVMYlpNHSKJY3E
      X7JyN6sSnIvgjxDbsjDtCElwqdZqLBdzxtMZpmnR2Nomcm1M00KVBCr1Osv5gqVlU2rts13d
      rAFayOCGgFwE3xPukwheei7BdRvgw4hOLoJzNp2vxyP6q+Vrzx9WqmsJgHWSB8At47kOqSAh
      pMnVlkBBpqgIPH78nO6WzuXFmP2TE54+fc5Wo4xYrN377tDfTcfXimBxZ5///g78eRN5ANwy
      g/4lfhwRB+CYU9Rqm067RbNepViqQPicP3/1DXEYUhBjcCJ2N7Q7dJLBY1LzALhlZFFA07eo
      ahqOqROJRbabVR4/eUoqy2jNXb44PsS2bYh8lm72viTvSlktoBeLrz1fuea5u+ZORXCSJFd/
      +Jxf5T51h/4l3ucabtOfO+8OLYriT2Y2wjBEURTSJCZBRLpm3nhlTFnYEQf72z+kCStjysiw
      qWsyPgqpZ9LePUZJXJ6ejdjq6ixMn5PDXz+iczYe4EQiB7tbRL5DJBYp3qAYFQU+qaTgOxZF
      rUISBUiKimWa1Go1kjgiTgUi30Uualc/V9KwbIe6XvvJJpL7Mgv0S8iyTKlUyow/mZkFMuYz
      UkT8wGU1nyMkMW6hjuJOqDZ3WU5n1No1pjObeq2IiEjv+WNCschqtqDRLJOisFwu0SoFIrXJ
      eDSgJibEkoQxmyGX9LfyZbVcoFSafPWv/0K5WsGniCSKeIsxzd0H7Hbfrb+9Ywwx5RqjFy+o
      NBrYszF6q4kbS3xeq+E4S5Zmynz0EqVcxlk56K0WznyK9He/p1bYRDWQHTJRCFNFmK9s4jii
      2d6lVi2jSgmW5TGdTHBtB2O5vDpmNg6xHI+VaWGZFr5t4CdXl1FrtNnd2WcxPkeRZVKtQmLO
      Uco6c8N4K18qeou9bgPbtjEdH1WWmE0nWLZL+h4H3YqSiGWHdFpVnJWB4wesLBd3Mef5yx4J
      ApZl0e60SeMYRIkwDJFlgTC6/3rgx2Sx5JT5Qljku7y8GHFycnRtSpR1bGtFlIiIJGiVKqQJ
      ggCW7VCtVPAcGy9KUEQoahU820QtlnAcF/1HKdB9KoT9Ep7nUVyDEF7ndWU+AHKu2IQAcF03
      cxogEynQJuO7NpbtYpsrwihmuViQJAmGYZCmKYHvsrJsHNvEDyNcxyFNUxwnu+eVvS9ZvNdm
      QgRvMq7rMprNEBORKHBRyyVevDxH0Sro9Tqe59EfTpHFBFEukEQB+wcH9EdjPjnJ1nFCNyWL
      565lz6MNYzYdU9XrJHGMIApXw64o/SCCx+MR5ar+w+F8cRhguz6evcIPN2s5dD4CfITs7B2S
      INKsVpHVIoF3lQfbrktZ0/BdhzABtVlFlFVc20JSFA4ODhHvoeh/E3kAfIRo5cpP/i+XywBU
      Xj0WtTI/nhdR9LerV9xH8hQo5xUptm2TJjGz+ZUYth2HMPBYrK4/Y3cTyEeAj5BRv0csFUg8
      D7WogFyi26gwvBxQ04v0zi8xd48YjyfUlIRqZ4967eaHSWeRLAZAPgLcMpZlY64MEmRePn3M
      5eUl/dEE33MQC2UUSWK5MHBtE0GSGA9H71Fvvh9kMQXKR4Bbpt5sUdUbyJLIzk6LBJGCIlGr
      VlEUhdPPf0OpWCRJYkgTojjdyL0AkM0RIK8EvyKKIlw3u8WnfDn0+v258+XQWUKWZarVKv3z
      Z5ihwmenh2uxG3gOqVTAWRmU9QZx4KEUisxnc9qdNknoE6YSobNCLes4qzlaVcdYLNnudjZq
      ObSiKJlbC5QHwM9odZqIK4Hvvv0WrdagIKWcv3hG+/Azjnbb72zPN2eYYpXh8zNK+gJvOada
      1/FShXanjRc4LFcJ0+FzpKJGYPvoHRd3NqFcb2/UcugsJht5APwMQZSQZWi0utjLKYYXIikF
      igXlvexFYcDMtem0ayxMBy8IkLyIwDN5/lKmXlOYzUw6nQ6m4+IJAp7rgpAQRDEUsicc35cs
      BkCuAW6ZwPdJAIEURS1AmiIIEAQhqqoShSFRkiIJICkqUegjyQphGFIsFPLl0LfoT54CfQDU
      ws/6/L/6QhdePa+oKj8eW6TC1RdEXoPIyxpZvNduzviaURxzibG0WMyn+GHMZDwmSWKGwxFJ
      muI5FlNjibmY4/ghprkiTRNMc/MqwlkMgHwEuGXiJGE2HSGi4l1cUGnW+eMfLilUdbpbEMUJ
      xnSKJIEgLEmTGEVRmM4X75zyZJ0sFsKy59GGcdk7QylV8BwTSVZYLZYUtRL+6mo59EXvJWKh
      ROA5xAjYq6sRYzYd4QYbdkJMBhtj5SL4lonCkBQBQQBRkohfCbjvhVwcRyQpSIKAIIpEUYgg
      iCRJgqKoPyyJ3gQRvK5CWC6C7xGy8tPpU/HV/5VXj7L809dVdfMOx/uedVRv102eAt0JKavl
      kiSJ6A9GpGnKarUicG3Gs7dr33Ifia9rmX7H5CPALTO8OCMUVWLPo1RSSeUS260as8kc31sx
      OL/ADSMMw6BEQGN7s/YBZ518BLhlVqaJZa2Q1RIvn37LxcUl/eGYhTEhkUoUCgU8x8IxV6jF
      EqPhcGOXQ2cxBcpF8C2zWi6pVGsIwt/mwUVBIIpjRFEkTVNEUQJSICVNr58uzEXw+v25cxH8
      MXSHFkQR27ZubMdxnHd+TxaXQ69DB2zMcuifd4f+vnNYGoVEgoQivX4nnI76mH7K8eHeDxtH
      FrMRk6VHtSASSQWC1ZT2/kNKqc2TixmteompYfPlo4e/6tNkcIGXKhzsbhG4JqFUpqy+f6bo
      OSapXMKcj6m1usyGA7b29nHMFVVdJ/IcglTGM2cUa21WsxHtboezswsOTx6gSpuzHFpV1R+W
      gGTBnzsfAb5nOh6TCAJxHPLy6ROEJMLXWgTjZ+hbD/CWC4o1lYuhyYOjbYQ45elXf8QVNcyp
      wd5+mxQFyzLRyh6KfsRyNiRRRJI0odXZIQgu3soXyzJRKk3+6//3f6O3t4gFFUSRxeVztk5/
      y+lB952uLXZXrISYfq+PeNknFSEWFYYXfX7/b/+BIA5YrRzGgx6CeIEXSAx6Z9DYRd4whZbF
      WaBMfMQVTcX2IwSgu3tIq92iJKdo1TZJ4OB7HomkcnSwixhHOH4IcpGSIlMtCUTC1Vx6vb3F
      7t4x5ugZaqFIUighhh7m0qDW3n4rX2rNLnvdJuVaA1ES0fUavmPT6GzTqL17/mpbJv2RQael
      UywVSZOU6XhK4Fmcn19gmisuB0Pa7Q6a3qVdL6F3d1GsMXMne1+YTSPzIjgKXHqDKUeH+4jC
      /dsc8saP90oZv/H9m7Qc2vf9PAV6V2S1xMnRwV278d4Ivxa09zCo35c8BfoI8ewVrh8x6l/g
      BQG93gVxHHF+3iNJUxxzwWA8x5iOsNyA0eCSIPD57rsnBHGmB+eNIPMjwH0n8S2WfsKgP+Ks
      10OWRS4uBlRbLdIkBVHGtSb4kgCLCahtZn/+I351e+NEcBYLYXkA3DKWuWLg+LRbNWKxQGAv
      qNTKWEuDlxcK3mqKUm4TW3OUUhl7NqTS7JIsxsydfdrlzfkTZTEFyrwIzrliE0RwXgnOMPeh
      Mda7krVKcBRFmasE5yPAz7g8e8oqkPn84fFa7LnWklQps5oN0VtdJsMBO/sHWMsF9WaTwLUI
      UwV3NaWkt1lOR3S6XV6e9Tg+/eSHSnA+Aqzfn3wEuIZ2t4W0Evjmq6/RanUKUsrTx1+zffpb
      PjnceneDocMySBn2xwwGQ1IRUkll0h/y23+oEacJ5tJkMuzDsI8fyYwuewgbWAnOInkA/AxR
      lFFVga2dPezllLkV0dneo6mX38ueuVq+EsFVXD/Edh2MmYHvWwxHEwpSyOXAZKfdxktkqoFN
      qjRxFmMM54DWBongLM4C5SnQPSFPgdbvT35Mas5HTx4At4xjLnD8iMFlD8fzOD87J4pCzs6u
      KsH2yqA/mjKfDFnZHoPLczzP5fEGVoKz2BdocxLMjCLELgsbhsMpF5eXKLLExeWQWqtNGIQI
      soLvLAlFSJdPodDl+Vf/il/pbpwIzmJfoDwAbhlzuWTg+rSbFRKpjW8ZVPQq5mLBcFrCNkYo
      5RaxbVxVgqd9Ks0t0sUMwz2kpeV/otskF8H3hE0QwXl36J/xMewJXhebUAn2fZ8wDDPjT+b2
      BH8/TZaEAaEgUZBfv8jxoIcdij/ZEzyfDJiZAWUVEqmIu5zQ2f+EshTyrDehpRcZzkz+7ovP
      ftUnYzrECgQOdreIApdYLFC4QTK+nE9wExkxtNHqHVzbolHT6PUnHB0d4KwMlm5MUYyQtTqh
      Z1HXa1z0Jxwd7m3UEUmyLFMqlTLjz52PAN8zGQ2JUoEkCXnx5AlCEhJWOriD76h1TwjMFWpV
      YTC2OT3eIQ1DHv/5n6/2BE9mHBzvkKLg2DZaOaDUOME0JqwiH5KQSvOIevB2AmxhGCiVJk++
      +SvFUgGPErIkEtsGte4B3Wbtna5NUQsYswkCJexhH0FSqFfLiCTYjoukqATGjEgEnBGiCHHg
      sxifU2hssVN7v5Npssivbg66AzIxz1CraIQJKIrM7uEJ2zvbaArU27soRJimhVqqcHy0j0xC
      EKeoWg29rNFqlEG62mbX7O6wu/cAa/KcYkmjWm9CkuKaSxrdnbfyRas12es2GAge2QEAAAhu
      SURBVA0HTBcmQhrT719y2e/jesE7X9vL509JxQL2cgqCxGR4yfn5S2YLB89xOHvxjCgV8awV
      sSAyG4+JkJFVjVope5XTm5DFWaDMi+A4CpjOV3Q7rUzeQT4UmyCCv297kxV/oijKfgB8KO7D
      cuj7fk5wGIY/dMXOgj/5cuhr6Pde4EQyn5ysZyP+YjbGS2SEH4ngZq3M+WDC8dEBznLOwk0o
      iiFyuU7oWDTqNXqDyU86YWzCCJDFtUCZEMFZotWuI64Enj15cnVOsAyT4QB965Dttv7O9tRi
      icVsgpiWcEcDBEkh1avIQoJl2chqgXAxIxYBd4wkCsxnAatxj1FjOxfBt0wmRHCmEAREEcrV
      Bs5iwvlFn/FkQvCe89dnz65EsLWagCgxHvY5P3vBbOEQBAHn34tg+0oET8cjwlRGUssbJ4Kz
      GAB5CnRPyFOg9ftz5ylQXgl+ezahEuy6bub2BGe0EuwTIFNUXr/IwcUZlp+yt9PFdV0WszHV
      VpdZv0+j02G2tPji01Muz18gFmsE5oxSfYutdv2tfBpenhEKRQ52t/Btg0CqUS2+/4dtLaZQ
      1FmOL9E7u4TOklKlymAw4ujoEM9eEaHiLCeU9Dar6ZBqo8V0MuP4wQmyuDmVYEVR8rVA1zEe
      Dl5VggOefzdHSCKiahun/x3VzjGhZaJUFEZTh9PjXbSiyHg6R0gjHMeh2kpwHB/Z9uhoRXwg
      DANEKaSm1xHUt79M13FQygX+0//zH6h3tkEq4ocR5vicvU//DacH77YvWBUTZo7NbLbEsBxi
      z6NYKhKKBWzLRlEl7LnNfDYlNhbEfkQsqQTmAjdKqarZy5vflywWwjIhguu1CokgUSgU2T8+
      ZXd/h7Iq0OzuU5RSFssVpYrO8dE+Cgm2G1HWipTL5VeFFZHTzx6x3awwsT0S16VYKJKmCf1+
      nzh++w++0dlhb6tFa2sHrVym0WxQUCV29g9p1N59X/BiYTCaLKjXNQqKQhgFpJJC7FhYns9q
      YTAYjanXG1TLZZAkXNsmFVLCKHtfmJuQi+D3IIlDFiubRl3P5Af4odgEEZwvh34PREmh2Xi7
      /D0n2+QpUM4VacJwOCIMXJ6/OCNOUobDEdZyTn80vWvvbo0sjuCZHwHuOxcvnxGKCqHjIQoR
      saSxs9UiDgJWqwXWfMDjGILAQwltqp09UiB7X5XNJB8BbhnHcQjDEL3RwnPsqy93mjAeDwkT
      GUnVKEgJzmpJpVZjtVzetcu3RhblZuZF8H3HdVxK2s2XAOcieP3+5Muhf0S+HPr27eTLoe8B
      Fy+/Y+Ep/ObRyVrsreZjhFL9VSV4h8BaolVrDIZjjo8Pcc0FkVDEWY4p6i3MyYhKo8lsOufk
      9MEPleBNGAHytUD3gM5WB3kFf/3zX9GqOgUp5ul337L36e/eqzt0SRGYui7GwsSwXJLAp1ic
      EQoqy8WSUrnAamZjGAbxYknkR6RqkdBablwlOIud4bLn0R0jSiqlksrB0RFFOcbyY/YOj9+7
      O7RhGIwnC/RaiVKxQBSFCHKBxHeIEDCNGcPxBF3XqVaqiLKCZ9sgsXGV4CwmG3kKdE/IU6D1
      +5N3h875oOQpUM4VaUz/ckDgOzx99pI4uVq0ZxrTja4EZzHZyEXwLdN78fRVJdglTXxiqczu
      dhshjbEsE3c54ttnV+1fjIlFpbW7sZXgLAZAPgLcMt/vgmq2upAkFItFiorMaDQkiEVERUNT
      wV6tqOp1bMu6a5dvjSymQLkIvmU892oDzE3ZBBGcxcZY+Z7gD0Bo3rwj8ibsCfZ9nyiKMuNP
      dvcEBx6+IFNSXnfv8uw5VgD7e9s4tsViNkHvbDO5uKTRaTFb2vzm0UN6L5+ilBuspkO6+ydv
      vZur33tBLGlXe4LNGZ5cR79Be5LldIhQbrIY9qg1O0zHI3YPT1hMRmzv72EvZ8RCCXsxoqS3
      WE7HdDptzvsTPnn4t3OCId8TvG5/7nwE+J7R4JIgFkjTgMW3V3uCE72L2fuWSvuQxLYRKzIz
      w+f0eJeKJjAaT5GEBM/z0EnwvADbDdmqaPhcCS7X9UhJ8Dwf3jIAfM9DKRf5f//jv6fe3UFS
      Zjx2POxZn8NHv3vnPcGVksLYdTEtl7nxhFSE4WDAylhSKBWp1DTmUxvTXDE3DBKhwHL2LVQa
      7/FJZpssZtuZCIBmvc7U9CjIKnW9TRrazCyf8t4xkiTyzdmMLw+/pFoTKEoJlp/SqFcRSYkD
      DxB5+PnnSKnP+XhBxXVRFZVQlBCUwjvdLVpbe1QrGp55REEroxY1FNWiVS28157g2WzOxFOp
      VwpEaQnHsQl8n8C3kAoa5nzGaGLRqdeIpSKxvURuHmAZU5wgRi1l4k+0FrIYAJkXwWmS4Ach
      hYKayR1FH4pNEMFZXA6d+duLIIoUi4W7diNnDWTxXpv5ALjvzIdnJKUW88EFpUoFe7Wi0Wqz
      WFk8PD3BmA6ZrjxUAmSthmNM0XWd0dLj80cPfyKC7ztZDIDMp0D3njjEi1OiICaOXAolDdfx
      0es1REF4JdZdBEFASCNSqUTsWRSqOsqPusK9TwqUtWnQLNrJR4DbRlIoSoAKcFUEKhb+lgcL
      gvD6CsnCetrArEszbbKd7NWmc9bGupYebLKdPAA2mNA1+af//083tjOfDPjTX76+kQ1/NedP
      //oHpkv/RnZC1+Kvf/4Dc+tm1fUkDvjP/+m/5CnQpjKfjLgcjAg9lyiB9z3qeDIckAgCR4eH
      N/In8AN29rbxvAD0G8zqCaC392mUb/bVHV328Hw/F8H3hfcRwbCeBWjT4SUrL+XkeP+9l2mn
      acLlRZ/d/b0fzj17H3x7xcvLIYdHDygVbhYEnuvmAXBfeN8AyHkzuQbI+ajJAyDno+a/Aa7/
      mDGir1KkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 15 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='44' name='Sheet 17' width='164'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 18' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='84' name='Sheet 19' width='192'>
      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
      DyS1qgTWk1upAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='64' name='Sheet 21' width='184'>
      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
      jDKgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 22' width='192'>
      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
      /n+zSSgX2+rvdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='Sheet 26' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 28' width='192'>
      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
      +P8BLubkxGwyk4EAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='159' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      H5rLdf26DfgzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='159' name='Sheet 6' width='192'>
      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
      b1BNtb7JcaQ6e3Etpbaunk5kHk4ivbMXAxSg3xB6nDrAgVPd8DIvQK2qwsrOkbsswFiRy6G9
      xyhtZpl391ZI2mpaZ1QD5zIyqbkYYkEGh/JV7PsN42G/APw9oazFd62/tWj0EyCH7KN7+DRs
      T/1fm+tndV5T+NsvESydF1tbP1t9KN/Rj2f/uIEVr4ZRrFri/ufnmFW9K1RcmRA8io2RLzPn
      jB7F2gXfmXOb3FPqvKbwt/wNrHkxts4k2OvaJtD9htBr3SrOT1punlu448kqonmW1eYPJsVr
      HB4rwpm3WY9iP5Cxfr3p3kwCFK8pzPh5Rc06P+DrVtuXLpc4vH4x67LLqVLM63ybXClOCmJE
      q5KaYCE6EAmA0DQZAolWJTXBQnQgGj0KJNpSZWVle3fhmkkARKuTIZAQHYQEQGiaBEBomgRA
      aJp8DyA0TT4BhKZJAISmSQCEpkkAhKZJAISmyakQoo00d3W9W4d8Aog2UXt1vSjef2MGTnuj
      2H4L3lxbAiDaQPNX17uVSABEGzjPedxxa3h1veISGt7Hu71JAEQbuNrV9Qopaq8uXYUEQLSB
      5q6ud2uRAIg2UHt1vWqmq+vZylEgoQXNX13vViJng4o2Uv97AJ+pzxM0ovFVstubBEBomgyB
      hKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISm
      SQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkAhKZJAISmSQCEpkkA
      hKZJAISmSQCEpv0/ZsT/cmJlDC4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Weights' width='192'>
      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
      w52eW+w8fpL2ejvZZSezi6v4PS5m/assBNdYmpog6JvntjPKa6+8gF2OMTHj4u7YEpVlxke6
      s4rJ9PQ0zz33HPPz8xvtQ2NjY6yvr+P1eqmqqsJqtbKyskJFRQWvv/466XSasrIyTCYT8Xj8
      cRfhG9k0orKpinr9GouRHKDiHOzh448vIJXVEQsvoLNUUkj4QefYmANgsu86Qwsx7FY9q3Oj
      /PKDq7Qf6mBj5oov/9u6ay/zk6OowOmXX2Pq9mdc7h1ne2cdd/pdHD6ynZHBGSoqHjwqnYlH
      KKmsRqfTYdBqmBq4jWqrxqh58n9htiJVVdFoNFgsFgwGA4qisLq6SjqdRqPRkEgkKC0tpbS0
      lHQ6jd/v58MPPySbzbK0tMTy8jJ6vf6Pf9ET4A8eQTv27cY5OgGArcxBXX0FWpMdg3+IQtVu
      ZN8USmXzxvol9iocFhlfOE5V6272dzYSi6zRUmbk+q1bBGJgNuiQ9GW025LMhHMseNzYq+pJ
      RULYmjrwjQ9Q0XEI7+BtKhtqHnx37XayixP09PbhiybZ8/QrWNeduFZj3+GuKV6/nR2mu7ub
      TCZDNBpFURQAVlZWkCSJoaEhxsfHsVgsVFRUYLVaCYVCmEwmdDodyeRXO0o9iTadICMeS2Cx
      mgiHIthKrYRXgxSAiup6cvEgGosdNR1F1dmwGLWQz7DsDyJp9FRW2kmn0lgtRqLRBCU2I6ur
      QcwldqwmDclUAYsBAtEMJUaJcDROqb0Cs0HLWjhMqb2C9XAAW3klmXgUvbUUNRMjGEniKC8h
      q8gYpBw5yYDFKO4Bvgv5fJ5gMIjdbiefz2/M/JJMJjGZTEQiEWRZpqSkhGAwiCzLlJeXEwqF
      kCQJh8MhJsgQhCeduIgWipoIgFDURACEoiYCIBS1h26Cf9cSLAjFQQyLIhQ1cQkkFLVNhkbM
      cuYf/i/a3/rvKcz2Yd9ex8VfXcPRWEHbtmaU0mYKc7eg5QSSexhTYwU93eM0tO/iWIeVC133
      kY1lvP7aC9zpuclL33+JLy5+zjabRH+0jDcPOhjySwRGrpLSWKnpPE6HPkS0tJPdTeVkVyf4
      zz+/y3/3P/03zHzxAT7HAU7WxhmKV7DQewXJbKLt0EmO7Wx4tHtL+LOz6fDoWbOF6dvdhENB
      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
    </thumbnail>
    <thumbnail height='192' name='seasonal Heating COP' width='192'>
      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
      tPImAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='seasonal Heating COP (2)' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
